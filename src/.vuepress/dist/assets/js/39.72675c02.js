(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{231:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch07-01-packages-and-crates-for-making-libraries-and-executables.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("ch07-01-mod-and-the-filesystem.md"),r("OutboundLink")],1),e._v(" "),r("br"),e._v("\ncommit 1fedfc4b96c2017f64ecfcf41a0a07e2e815f24f")])]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),r("p",[e._v("一个包可以带有零个或一个库 crate 和任意多个二进制 crate。一个包中必须带有至少一个（库或者二进制）crate。")]),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("接下来让我们讨论模块！")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"包和-crate-用来创建库和二进制项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包和-crate-用来创建库和二进制项目","aria-hidden":"true"}},[this._v("#")]),this._v(" 包和 crate 用来创建库和二进制项目")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("让我们聊聊 "),t("strong",[this._v("模块")]),this._v(" 与 "),t("em",[this._v("crate")]),this._v("。下面是一个总结：")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("em",[e._v("crate")]),e._v(" 是一个二进制或库项目。")]),e._v(" "),r("li",[r("strong",[e._v("crate 根")]),e._v("（"),r("em",[e._v("crate root")]),e._v("）是一个用来描述如何构建 crate 的文件。")]),e._v(" "),r("li",[r("strong",[e._v("包")]),e._v(" 带有 "),r("em",[e._v("Cargo.toml")]),e._v(" 文件用以描述如何构建一个或多个 crate。一个包中至多可以有一个库项目。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("所以当运行 "),t("code",[this._v("cargo new")]),this._v(" 时是在创建一个包：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ cargo new my-project\n     Created binary (application) `my-project` package\n$ ls my-project\nCargo.toml\nsrc\n$ ls my-project/src\nmain.rs\n")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("p",[e._v("因为 Cargo 创建了 "),r("em",[e._v("Cargo.toml")]),e._v("，这意味着现在我们有了一个包。如果查看 "),r("em",[e._v("Cargo.toml")]),e._v(" 的内容，会发现并没有提到 "),r("em",[e._v("src/main.rs")]),e._v("。然而，Cargo 的约定是如果在代表包的 "),r("em",[e._v("Cargo.toml")]),e._v(" 的同级目录下包含 "),r("em",[e._v("src")]),e._v(" 目录且其中包含 "),r("em",[e._v("main.rs")]),e._v(" 文件的话，Cargo 就知道这个包带有一个与包同名的二进制 crate，且 "),r("em",[e._v("src/main.rs")]),e._v(" 就是 crate 根。另一个约定如果包目录中包含 "),r("em",[e._v("src/lib.rs")]),e._v("，则包带有与其同名的库 crate，且 "),r("em",[e._v("src/lib.rs")]),e._v(" 是 crate 根。crate 根文件将由 Cargo 传递给 "),r("code",[e._v("rustc")]),e._v(" 来实际构建库或者二进制项目。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果包同时包含 "),t("em",[this._v("src/main.rs")]),this._v(" 和 "),t("em",[this._v("src/lib.rs")]),this._v("，那么它带有两个 crate：一个库和一个二进制项目，同名。如果只有其中之一，则包将只有一个库或者二进制 crate。包可以带有多个二进制 crate，需将其文件置于 "),t("em",[this._v("src/bin")]),this._v(" 目录；每个文件将是一个单独的二进制 crate。")])}],!1,null,null,null);s.options.__file="ch07-01-packages-and-crates-for-making-libraries-and-executables.md";t.default=s.exports}}]);