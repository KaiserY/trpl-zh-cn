(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{188:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/second-edition/src/ch15-05-interior-mutability.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch15-05-interior-mutability.md"),n("OutboundLink")],1),t._v(" "),n("br"),t._v("\ncommit 54169ef43f57847913ebec7e021c1267663a5d12")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("在编译时检查借用规则的好处是这些错误将在开发过程的早期被捕获同时对没有运行时性能影响，因为所有的分析都提前完成了。为此，在编译时检查借用规则是大部分情况的最佳选择，这也正是其为何是 Rust 的默认行为。")]),t._v(" "),n("p",[t._v("相反在运行时检查借用规则的好处是特定内存安全的场景是允许的，而它们在编译时检查中是不允许的。静态分析，正如 Rust 编译器，是天生保守的。代码的一些属性则不可能通过分析代码发现：其中最著名的就是 "),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("停机问题（Halting Problem）"),n("OutboundLink")],1),t._v("，这超出了本书的范畴，不过如果你感兴趣的话这是一个值得研究的有趣主题。")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),n("p",[t._v("借用规则的一个推论是当有一个不可变值时，不能可变的借用它。例如，如下代码不能编译：")]),t._v(" "),t._m(15),n("p",[t._v("如果尝试编译，会得到如下错误：")]),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("虽然 Rust 没有与其他语言中的对象完全相同的对象，Rust 也没有像其他语言那样在标准库中内建 mock 对象功能，不过我们确实可以创建一个与 mock 对象有着相同功能的结构体。")]),t._v(" "),n("p",[t._v("如下是一个我们想要测试的场景：我们在编写一个记录某个值与最大值的差距的库，并根据当前值与最大值的差距来发送消息。例如，这个库可以用于记录用户所允许的 API 调用数量限额。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),n("p",[t._v("然而，这个测试是有问题的：")]),t._v(" "),t._m(32),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"refcell-t-和内部可变性模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refcell-t-和内部可变性模式","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("RefCell<T>")]),this._v(" 和内部可变性模式")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("strong",[t._v("内部可变性")]),t._v("（"),n("em",[t._v("Interior mutability")]),t._v("）是 Rust 中的一个设计模式，它允许你即使在有不可变引用时改变数据，这通常是借用规则所不允许的。为此，该模式在数据结构中使用 "),n("code",[t._v("unsafe")]),t._v(" 代码来模糊 Rust 通常的可变性和借用规则。我们还未讲到不安全代码；第十九章会学习它们。当可以确保代码在运行时会遵守借用规则，即使编译器不能保证的情况，可以选择使用那些运用内部可变性模式的类型。所涉及的 "),n("code",[t._v("unsafe")]),t._v(" 代码将被封装进安全的 API 中，而外部类型仍然是不可变的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("让我们通过遵循内部可变性模式的 "),s("code",[this._v("RefCell<T>")]),this._v(" 类型来开始探索。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"通过-refcell-t-在运行时检查借用规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-refcell-t-在运行时检查借用规则","aria-hidden":"true"}},[this._v("#")]),this._v(" 通过 "),s("code",[this._v("RefCell<T>")]),this._v(" 在运行时检查借用规则")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("不同于 "),n("code",[t._v("Rc<T>")]),t._v("，"),n("code",[t._v("RefCell<T>")]),t._v(" 代表其数据的唯一的所有权。那么是什么让 "),n("code",[t._v("RefCell<T>")]),t._v(" 不同于像 "),n("code",[t._v("Box<T>")]),t._v(" 这样的类型呢？回忆一下第四章所学的借用规则：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("在任意给定时间，"),s("strong",[this._v("只能")]),this._v(" 拥有如下中的一个：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("一个可变引用。")]),this._v(" "),s("li",[this._v("任意数量的不可变引用。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",{attrs:{start:"2"}},[s("li",[this._v("引用必须总是有效的。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("对于引用和 "),n("code",[t._v("Box<T>")]),t._v("，借用规则的不可变性作用于编译时。对于 "),n("code",[t._v("RefCell<T>")]),t._v("，这些不可变性作用于 "),n("strong",[t._v("运行时")]),t._v("。对于引用，如果违反这些规则，会得到一个编译错误。而对于"),n("code",[t._v("RefCell<T>")]),t._v("，违反这些规则会 "),n("code",[t._v("panic!")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因为一些分析是不可能的，如果 Rust 编译器不能通过所有权规则编译，它可能会拒绝一个正确的程序；从这种角度考虑它是保守的。如果 Rust 接受不正确的程序，那么人们也就不会相信 Rust 所做的保证了。然而，如果 Rust 拒绝正确的程序，会给程序员带来不便，但不会带来灾难。"),s("code",[this._v("RefCell<T>")]),this._v(" 正是用于当你确信代码遵守借用规则，而编译器不能理解和确定的时候。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("类似于 "),n("code",[t._v("Rc<T>")]),t._v("，"),n("code",[t._v("RefCell<T>")]),t._v(" 只能用于单线程场景。如果尝试在多线程上下文中使用"),n("code",[t._v("RefCell<T>")]),t._v("，会得到一个编译错误。第十六章会介绍如何在多线程程序中使用 "),n("code",[t._v("RefCell<T>")]),t._v(" 的功能。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如下为选择 "),s("code",[this._v("Box<T>")]),this._v("，"),s("code",[this._v("Rc<T>")]),this._v(" 或 "),s("code",[this._v("RefCell<T>")]),this._v(" 的理由：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("Rc<T>")]),t._v(" 允许相同数据有多个所有者；"),n("code",[t._v("Box<T>")]),t._v(" 和 "),n("code",[t._v("RefCell<T>")]),t._v(" 有单一所有者。")]),t._v(" "),n("li",[n("code",[t._v("Box<T>")]),t._v(" 允许在编译时执行不可变（或可变）借用检查；"),n("code",[t._v("Rc<T>")]),t._v("仅允许在编译时执行不可变借用检查；"),n("code",[t._v("RefCell<T>")]),t._v(" 允许在运行时执行不可变（或可变）借用检查。")]),t._v(" "),n("li",[t._v("因为 "),n("code",[t._v("RefCell<T>")]),t._v(" 允许在运行时执行可变借用检查，所以我们可以在即便 "),n("code",[t._v("RefCell<T>")]),t._v(" 自身是不可变的情况下修改其内部的值。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后一个理由便是指 "),s("strong",[this._v("内部可变性")]),this._v(" 模式。让我们看看何时内部可变性是有用的，并讨论这是如何成为可能的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"内部可变性：不可变值的可变借用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内部可变性：不可变值的可变借用","aria-hidden":"true"}},[this._v("#")]),this._v(" 内部可变性：不可变值的可变借用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("fn main() {\n    let x = 5;\n    let y = &mut x;\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("error[E0596]: cannot borrow immutable local variable `x` as mutable\n --\x3e src/main.rs:3:18\n  |\n2 |     let x = 5;\n  |         - consider changing this to `mut x`\n3 |     let y = &mut x;\n  |                  ^ cannot borrow mutably\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然而，特定情况下在值的方法内部能够修改自身是很有用的；而不是在其他代码中，此时值仍然是不可变。值方法外部的代码不能修改其值。"),s("code",[this._v("RefCell<T>")]),this._v(" 是一个获得内部可变性的方法。"),s("code",[this._v("RefCell<T>")]),this._v(" 并没有完全绕开借用规则，编译器中的借用检查器允许内部可变性并相应的在运行时检查借用规则。如果违反了这些规则，会得到 "),s("code",[this._v("panic!")]),this._v(" 而不是编译错误。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("让我们通过一个实际的例子来探索何处可以使用 "),s("code",[this._v("RefCell<T>")]),this._v(" 来修改不可变值并看看为何这么做是有意义的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"内部可变性的用例：mock-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内部可变性的用例：mock-对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 内部可变性的用例：mock 对象")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("测试替身")]),this._v("（"),s("em",[this._v("test double")]),this._v("）是一个通用编程概念，它代表一个在测试中替代某个类型的类型。"),s("strong",[this._v("mock 对象")]),this._v(" 是特定类型的测试替身，它们记录测试过程中发生了什么以便可以断言操作是正确的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("该库只提供记录与最大值的差距，以及何种情况发送什么消息的功能。使用此库的程序则期望提供实际发送消息的机制：程序可以选择记录一条消息、发送 email、发送短信等等。库本身无需知道这些细节；只需实现其提供的 "),s("code",[this._v("Messenger")]),this._v(" trait 即可。示例 15-23 展示了库代码：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Messenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" LimitTracker"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token lifetime-annotation symbol"}},[t._v("'a,")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token lifetime-annotation symbol"}},[t._v("'a")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" Messenger"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token lifetime-annotation symbol"}},[t._v("'a")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" usize"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    max"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" usize"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token lifetime-annotation symbol"}},[t._v("'a,")]),t._v(" T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" LimitTracker"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token lifetime-annotation symbol"}},[t._v("'a,")]),t._v(" T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Messenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("T"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" usize"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" LimitTracker"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        LimitTracker "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            max"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("set_value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" usize"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f64 "),n("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f64"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.75")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.9")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Warning: You\'ve used up over 75% of your quota!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0.9")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Urgent warning: You\'ve used up over 90% of your quota!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" percentage_of_max "),n("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Error: You are over your quota!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 15-23：一个记录某个值与最大值差距的库，并根据此值的特定级别发出警告")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这些代码中一个重要部分是拥有一个方法 "),n("code",[t._v("send")]),t._v(" 的 "),n("code",[t._v("Messenger")]),t._v(" trait，其获取一个 "),n("code",[t._v("self")]),t._v(" 的不可变引用和文本信息。这是我们的 mock 对象所需要拥有的接口。另一个重要的部分是我们需要测试 "),n("code",[t._v("LimitTracker")]),t._v(" 的 "),n("code",[t._v("set_value")]),t._v(" 方法的行为。可以改变传递的 "),n("code",[t._v("value")]),t._v(" 参数的值，不过 "),n("code",[t._v("set_value")]),t._v(" 并没有返回任何可供断言的值。也就是说，如果使用某个实现了 "),n("code",[t._v("Messenger")]),t._v(" trait 的值和特定的 "),n("code",[t._v("max")]),t._v(" 创建 "),n("code",[t._v("LimitTracker")]),t._v("，当传递不同 "),n("code",[t._v("value")]),t._v(" 值时，消息发送者应被告知发送合适的消息。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("我们所需的 mock 对象是，调用 "),n("code",[t._v("send")]),t._v(" 不同于实际发送 email 或短息，其只记录信息被通知要发送了。可以新建一个 mock 对象示例，用其创建 "),n("code",[t._v("LimitTracker")]),t._v("，调用 "),n("code",[t._v("LimitTracker")]),t._v(" 的 "),n("code",[t._v("set_value")]),t._v(" 方法，然后检查 mock 对象是否有我们期望的消息。示例 15-24 展示了一个如此尝试的 mock 对象实现，不过借用检查器并不允许：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Vec"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("vec!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" Messenger "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("push")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("it_sends_an_over_75_percent_warning_message")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mock_messenger "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MockMessenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" limit_tracker "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LimitTracker"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("mock_messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("100")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        limit_tracker"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("set_value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("80")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token function"}},[t._v("assert_eq!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mock_messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 15-24：尝试实现 "),s("code",[this._v("MockMessenger")]),this._v("，借用检查器并不允许")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("测试代码定义了一个 "),n("code",[t._v("MockMessenger")]),t._v(" 结构体，其 "),n("code",[t._v("sent_messages")]),t._v(" 字段为一个 "),n("code",[t._v("String")]),t._v(" 值的 "),n("code",[t._v("Vec")]),t._v(" 用来记录被告知发送的消息。我们还定义了一个关联函数 "),n("code",[t._v("new")]),t._v(" 以便于新建从空消息列表开始的 "),n("code",[t._v("MockMessenger")]),t._v(" 值。接着为 "),n("code",[t._v("MockMessenger")]),t._v(" 实现 "),n("code",[t._v("Messenger")]),t._v(" trait 这样就可以为 "),n("code",[t._v("LimitTracker")]),t._v(" 提供一个 "),n("code",[t._v("MockMessenger")]),t._v("。在 "),n("code",[t._v("send")]),t._v(" 方法的定义中，获取传入的消息作为参数并储存在 "),n("code",[t._v("MockMessenger")]),t._v(" 的 "),n("code",[t._v("sent_messages")]),t._v(" 列表中。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在测试中，我们测试了当 "),n("code",[t._v("LimitTracker")]),t._v(" 被告知将 "),n("code",[t._v("value")]),t._v(" 设置为超过 "),n("code",[t._v("max")]),t._v(" 值 75% 的某个值。首先新建一个 "),n("code",[t._v("MockMessenger")]),t._v("，其从空消息列表开始。接着新建一个 "),n("code",[t._v("LimitTracker")]),t._v(" 并传递新建 "),n("code",[t._v("MockMessenger")]),t._v(" 的引用和 "),n("code",[t._v("max")]),t._v(" 值 100。我们使用值 80 调用 "),n("code",[t._v("LimitTracker")]),t._v(" 的 "),n("code",[t._v("set_value")]),t._v(" 方法，这超过了 100 的 75%。接着断言 "),n("code",[t._v("MockMessenger")]),t._v(" 中记录的消息列表应该有一条消息。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("error[E0596]: cannot borrow immutable field `self.sent_messages` as mutable\n  --\x3e src/lib.rs:46:13\n   |\n45 |         fn send(&self, message: &str) {\n   |                 ----- use `&mut self` here to make mutable\n46 |             self.sent_messages.push(String::from(message));\n   |             ^^^^^^^^^^^^^^^^^^ cannot mutably borrow immutable field\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("不能修改 "),n("code",[t._v("MockMessenger")]),t._v(" 来记录消息，因为 "),n("code",[t._v("send")]),t._v(" 方法获取 "),n("code",[t._v("self")]),t._v(" 的不可变引用。我们也不能参考错误文本的建议使用 "),n("code",[t._v("&mut self")]),t._v(" 替代，因为这样 "),n("code",[t._v("send")]),t._v(" 的签名就不符合 "),n("code",[t._v("Messenger")]),t._v(" trait 定义中的签名了（请随意尝试如此修改并看看会出现什么错误信息）。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这正是内部可变性的用武之地！我们将通过 "),n("code",[t._v("RefCell")]),t._v(" 来储存 "),n("code",[t._v("sent_messages")]),t._v("，然而 "),n("code",[t._v("send")]),t._v(" 将能够修改 "),n("code",[t._v("sent_messages")]),t._v(" 并储存消息。示例 15-25 展示了代码：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RefCell"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Vec"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),n("span",{attrs:{class:"token operator"}},[t._v(">>")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("vec!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" Messenger "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" MockMessenger "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("send")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("borrow_mut")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("push")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("it_sends_an_over_75_percent_warning_message")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// --snip--")]),t._v("\n#         "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mock_messenger "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MockMessenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#         "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" limit_tracker "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LimitTracker"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("mock_messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("100")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#         limit_tracker"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("set_value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("75")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token function"}},[t._v("assert_eq!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mock_messenger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sent_messages"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("borrow")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("len")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 15-25：使用 "),s("code",[this._v("RefCell<T>")]),this._v(" 能够在外部值被认为是不可变的情况下修改内部值")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("现在 "),n("code",[t._v("sent_messages")]),t._v(" 字段的类型是 "),n("code",[t._v("RefCell<Vec<String>>")]),t._v(" 而不是 "),n("code",[t._v("Vec<String>")]),t._v("。在 "),n("code",[t._v("new")]),t._v(" 函数中新建了一个 "),n("code",[t._v("RefCell")]),t._v(" 示例替代空 vector。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("对于 "),n("code",[t._v("send")]),t._v(" 方法的实现，第一个参数仍为 "),n("code",[t._v("self")]),t._v(" 的不可变借用，这是符合方法定义的。我们调用 "),n("code",[t._v("self.sent_messages")]),t._v(" 中 "),n("code",[t._v("RefCell")]),t._v(" 的 "),n("code",[t._v("borrow_mut")]),t._v(" 方法来获取 "),n("code",[t._v("RefCell")]),t._v(" 中值的可变引用，这是一个 vector。接着可以对 vector 的可变引用调用 "),n("code",[t._v("push")]),t._v(" 以便记录测试过程中看到的消息。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后必须做出的修改位于断言中：为了看到其内部 vector 中有多少个项，需要调用 "),s("code",[this._v("RefCell")]),this._v(" 的 "),s("code",[this._v("borrow")]),this._v(" 以获取 vector 的不可变引用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在我们见识了如何使用 "),s("code",[this._v("RefCell<T>")]),this._v("，让我们研究一下它怎样工作的！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"refcell-t-在运行时检查借用规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refcell-t-在运行时检查借用规则","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("RefCell<T>")]),this._v(" 在运行时检查借用规则")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("当创建不可变和可变引用时，我们分别使用 "),n("code",[t._v("&")]),t._v(" 和 "),n("code",[t._v("&mut")]),t._v(" 语法。对于 "),n("code",[t._v("RefCell<T>")]),t._v(" 来说，则是 "),n("code",[t._v("borrow")]),t._v(" 和 "),n("code",[t._v("borrow_mut")]),t._v(" 方法，这属于 "),n("code",[t._v("RefCell<T>")]),t._v(" 安全 API 的一部分。"),n("code",[t._v("borrow")]),t._v(" 方法返回 "),n("code",[t._v("Ref")]),t._v(" 类型的智能指针，"),n("code",[t._v("borrow_mut")]),t._v(" 方法返回 "),n("code",[t._v("RefMut")]),t._v(" 类型的智能指针。这两个类型都实现了 "),n("code",[t._v("Deref")]),t._v(" 所以可以当作常规引用对待。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("RefCell<T>")]),t._v(" 记录当前有多少个活动的 "),n("code",[t._v("Ref")]),t._v(" 和 "),n("code",[t._v("RefMut")]),t._v(" 智能指针。每次调用 "),n("code",[t._v("borrow")]),t._v("，"),n("code",[t._v("RefCell<T>")]),t._v(" 将活动的不可变借用计数加一。当 "),n("code",[t._v("Ref")]),t._v(" 值离开作用域时，不可变借用计数减一。就像编译时借用规则一样，"),n("code",[t._v("RefCell<T>")]),t._v(" 在任何时候只允许有多个不可变借用或一个可变借用。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如果我们尝试违反这些规则，相比引用时的编译时错误，"),n("code",[t._v("RefCell<T>")]),t._v(" 的实现会在运行时 "),n("code",[t._v("panic!")]),t._v("。示例 15-26 展示了对示例 15-25 中 "),n("code",[t._v("send")]),t._v(" 实现的修改，这里我们故意尝试在相同作用域创建两个可变借用以便演示 "),n("code",[t._v("RefCell<T>")]),t._v(" 不允许我们在运行时这么做：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("impl Messenger for MockMessenger {\n    fn send(&self, message: &str) {\n        let mut one_borrow = self.sent_messages.borrow_mut();\n        let mut two_borrow = self.sent_messages.borrow_mut();\n\n        one_borrow.push(String::from(message));\n        two_borrow.push(String::from(message));\n    }\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 15-26：在同一作用域中创建两个可变引用并观察 "),s("code",[this._v("RefCell<T>")]),this._v(" panic")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这里为 "),n("code",[t._v("borrow_mut")]),t._v(" 返回的 "),n("code",[t._v("RefMut")]),t._v(" 智能指针创建了 "),n("code",[t._v("one_borrow")]),t._v(" 变量。接着用相同的方式在变量 "),n("code",[t._v("two_borrow")]),t._v(" 创建了另一个可变借用。这会在相同作用域中创建一个可变引用，这是不允许的，如果运行库的测试，编译时不会有任何错误，不过测试会失败：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("---- tests::it_sends_an_over_75_percent_warning_message stdout ----\n\tthread 'tests::it_sends_an_over_75_percent_warning_message' panicked at\n    'already borrowed: BorrowMutError', src/libcore/result.rs:906:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("可以看到代码 panic 和信息"),s("code",[this._v("already borrowed: BorrowMutError")]),this._v("。这也就是 "),s("code",[this._v("RefCell<T>")]),this._v(" 如何在运行时处理违反借用规则的情况。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在运行时捕获借用错误而不是编译时意味着将会在开发过程的后期才会发现错误 ———— 甚至有可能发布到生产环境才发现。还会因为在运行时而不是编译时记录借用而导致少量的运行时性能惩罚。然而，使用 "),s("code",[this._v("RefCell")]),this._v(" 使得在只允许不可变值的上下文中编写修改自身以记录消息的 mock 对象成为可能。虽然有取舍，但是我们可以选择使用 "),s("code",[this._v("RefCell<T>")]),this._v(" 来获得比常规引用所能提供的更多的功能。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"结合-rc-t-和-refcell-t-来拥有多个可变数据所有者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结合-rc-t-和-refcell-t-来拥有多个可变数据所有者","aria-hidden":"true"}},[this._v("#")]),this._v(" 结合 "),s("code",[this._v("Rc<T>")]),this._v(" 和 "),s("code",[this._v("RefCell<T>")]),this._v(" 来拥有多个可变数据所有者")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("RefCell<T>")]),t._v(" 的一个常见用法是与 "),n("code",[t._v("Rc<T>")]),t._v(" 结合。回忆一下 "),n("code",[t._v("Rc<T>")]),t._v(" 允许对相同数据有多个所有者，不过只能提供数据的不可变访问。如果有一个储存了 "),n("code",[t._v("RefCell<T>")]),t._v(" 的 "),n("code",[t._v("Rc<T>")]),t._v(" 的话，就可以得到有多个所有者 "),n("strong",[t._v("并且")]),t._v(" 可以修改的值了！")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("例如，回忆示例 15-13 的 cons list 的例子中使用 "),n("code",[t._v("Rc<T>")]),t._v(" 使得多个列表共享另一个列表的所有权。因为 "),n("code",[t._v("Rc<T>")]),t._v(" 只存放不可变值，所以一旦创建了这些列表值后就不能修改。让我们加入 "),n("code",[t._v("RefCell<T>")]),t._v(" 来获得修改列表中值的能力。示例 15-27 展示了通过在 "),n("code",[t._v("Cons")]),t._v(" 定义中使用 "),n("code",[t._v("RefCell<T>")]),t._v("，我们就允许修改所有列表中的值了：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Debug)]")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" List "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("Cons")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rc"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("RefCell"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("i32"),n("span",{attrs:{class:"token operator"}},[t._v(">>")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Rc"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("List"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Nil"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" List"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Cons"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("Cons")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clone")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Nil"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Cons")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("6")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clone")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Cons")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RefCell"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Rc"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clone")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("value"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("borrow_mut")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"a after = {:?}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"b after = {:?}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"c after = {:?}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 15-27：使用 "),s("code",[this._v("Rc<RefCell<i32>>")]),this._v(" 创建可以修改的 "),s("code",[this._v("List")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这里创建了一个 "),n("code",[t._v("Rc<RefCell<i32>")]),t._v(" 实例并储存在变量 "),n("code",[t._v("value")]),t._v(" 中以便之后直接访问。接着在 "),n("code",[t._v("a")]),t._v(" 中用包含 "),n("code",[t._v("value")]),t._v(" 的 "),n("code",[t._v("Cons")]),t._v(" 成员创建了一个 "),n("code",[t._v("List")]),t._v("。需要克隆 "),n("code",[t._v("value")]),t._v(" 以便 "),n("code",[t._v("a")]),t._v(" 和 "),n("code",[t._v("value")]),t._v(" 都能拥有其内部值 "),n("code",[t._v("5")]),t._v(" 的所有权，而不是将所有权从 "),n("code",[t._v("value")]),t._v(" 移动到 "),n("code",[t._v("a")]),t._v(" 或者让 "),n("code",[t._v("a")]),t._v(" 借用 "),n("code",[t._v("value")]),t._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("我们将列表 "),n("code",[t._v("a")]),t._v(" 封装进了 "),n("code",[t._v("Rc<T>")]),t._v(" 这样当创建列表 "),n("code",[t._v("b")]),t._v(" 和 "),n("code",[t._v("c")]),t._v(" 时，他们都可以引用 "),n("code",[t._v("a")]),t._v("，正如示例 15-13 一样。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("一旦创建了列表 "),n("code",[t._v("a")]),t._v("、"),n("code",[t._v("b")]),t._v(" 和 "),n("code",[t._v("c")]),t._v("，我们将 "),n("code",[t._v("value")]),t._v(" 的值加 10。为此对 "),n("code",[t._v("value")]),t._v(" 调用了 "),n("code",[t._v("borrow_mut")]),t._v("，这里使用了第五章讨论的自定解引用功能（“"),n("code",[t._v("->")]),t._v("运算符到哪去了？”）来解引用 "),n("code",[t._v("Rc<T>")]),t._v(" 以获取其内部的 "),n("code",[t._v("RefCell<T>")]),t._v(" 值。"),n("code",[t._v("borrow_mut")]),t._v(" 方法返回 "),n("code",[t._v("RefMut<T>")]),t._v(" 智能指针，可以对其使用解引用运算符并修改其内部值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当我们打印出 "),s("code",[this._v("a")]),this._v("、"),s("code",[this._v("b")]),this._v(" 和 "),s("code",[this._v("c")]),this._v(" 时，可以看到他们都拥有修改后的值 15 而不是 5：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("a after = Cons(RefCell { value: 15 }, Nil)\nb after = Cons(RefCell { value: 6 }, Cons(RefCell { value: 15 }, Nil))\nc after = Cons(RefCell { value: 10 }, Cons(RefCell { value: 15 }, Nil))\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这是非常巧妙的！通过使用 "),n("code",[t._v("RefCell<T>")]),t._v("，我们可以拥有一个表面上不可变的 "),n("code",[t._v("List")]),t._v("，不过可以使用 "),n("code",[t._v("RefCell<T>")]),t._v(" 中提供内部可变性的方法来在需要时修改数据。"),n("code",[t._v("RefCell<T>")]),t._v(" 的运行时借用规则检查也确实保护我们免于出现数据竞争，而且我们也决定牺牲一些速度来换取数据结构的灵活性。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("标准库中也有其他提供内部可变性的类型，比如 "),n("code",[t._v("Cell<T>")]),t._v("，它有些类似（"),n("code",[t._v("RefCell<T>")]),t._v("）除了相比提供内部值的引用，其值被拷贝进和拷贝出 "),n("code",[t._v("Cell<T>")]),t._v("。还有 "),n("code",[t._v("Mutex<T>")]),t._v("，其提供线程间安全的内部可变性，下一章并发会讨论它的应用。请查看标准库来获取更多细节和不同类型之间的区别。")])}],!1,null,null,null);e.options.__file="ch15-05-interior-mutability.md";s.default=e.exports}}]);