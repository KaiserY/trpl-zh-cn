(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{267:function(t,e,s){"use strict";s.r(e);var r=s(0),i=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch03-00-common-programming-concepts.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch03-00-common-programming-concepts.md"),s("OutboundLink")],1),t._v(" "),s("br"),t._v("\ncommit 1fedfc4b96c2017f64ecfcf41a0a07e2e815f24f")])]),t._v(" "),s("p",[t._v("本章介绍一些几乎所有编程语言都有的概念，以及它们在 Rust 中是如何工作的。很多编程语言的核心概念都是共通的，本章中展示的概念都不是 Rust 所特有的，不过我们会在 Rust 上下文中讨论它们，并解释使用这些概念的惯例。")]),t._v(" "),s("p",[t._v("具体来说，我们将会学习变量、基本类型、函数、注释和控制流。每一个 Rust 程序中都会用到这些基础知识，提早学习这些概念会让你在起步时就打下坚实的基础。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("这里我们将对本书中的一些概念做一些解释：变量、函数、结构体等等。所有这些都需要名称。Rust 中的名称被称为 “标识符”（“identifier”），它们可以是任意非空的 ASCII 字符串，不过有如下限制：")]),t._v(" "),s("p",[t._v("要么是：")]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("或者是：")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"通用编程概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用编程概念","aria-hidden":"true"}},[this._v("#")]),this._v(" 通用编程概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"关键字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关键字","aria-hidden":"true"}},[this._v("#")]),this._v(" 关键字")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Rust 语言有一组保留的 "),e("strong",[this._v("关键字")]),this._v("（"),e("em",[this._v("keywords")]),this._v("），就像大部分语言一样，它们只能由语言本身使用。记住，你不能使用这些关键字作为变量或函数的名称。大部分关键字有特殊的意义，你将在 Rust 程序中使用它们完成各种任务；一些关键字目前没有相应的功能，是为将来可能添加的功能保留的。可以在附录 A 中找到关键字的列表。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"标识符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标识符","aria-hidden":"true"}},[this._v("#")]),this._v(" 标识符")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("第一个字符是字母。")]),this._v(" "),e("li",[this._v("其它字符是字母数字或者 _。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("第一个字符是 _。")]),this._v(" "),e("li",[this._v("标识符需多于一个字符。单独的 _ 不是标识符。")]),this._v(" "),e("li",[this._v("其它字符是字母数字或者 _。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"原始标识符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原始标识符","aria-hidden":"true"}},[this._v("#")]),this._v(" 原始标识符")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("有时出于某种原因你可能需要将关键字作为名称。比如你需要调用 C 语言库中名为 "),e("em",[this._v("match")]),this._v(" 的函数，在 C 语言中 "),e("em",[this._v("match")]),this._v(" 不是关键字。为此你可以使用 “原始标识符”（“raw identifier”）。原始标识符以 "),e("code",[this._v("r#")]),this._v(" 开头：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let r#fn = \"this variable is named 'fn' even though that's a keyword\";\n\n// 调用名为 'match' 的函数\nr#match();\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("你无需经常用到原始标识符，但是当你 "),e("strong",[this._v("真正")]),this._v(" 需要它们时可以这么做。")])}],!1,null,null,null);i.options.__file="ch03-00-common-programming-concepts.md";e.default=i.exports}}]);