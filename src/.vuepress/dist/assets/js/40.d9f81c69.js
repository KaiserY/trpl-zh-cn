(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{240:function(t,e,n){"use strict";n.r(e);var s=n(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/second-edition/src/ch07-02-controlling-visibility-with-pub.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch07-02-controlling-visibility-with-pub.md"),n("OutboundLink")],1),t._v(" "),n("br"),t._v("\ncommit a120c730714e07f8f32d905e9374a50b2e0ffdf5")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),n("p",[t._v("并编译代码：")]),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),n("p",[t._v("现在编译的话，那个警告就消失了：")]),t._v(" "),t._m(34),n("p",[t._v("只剩一个警告了！尝试自食其力修改它吧！")]),t._v(" "),t._m(35),t._v(" "),n("p",[t._v("总的来说，有如下可见性规则：")]),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),n("p",[t._v("这里有一些尝试修复错误的代码修改意见。在你尝试它们之前，猜测一下它们哪个能修复错误，接着编译查看你是否猜对了，并结合私有性规则理解为什么。")]),t._v(" "),t._m(49),t._v(" "),n("p",[t._v("请随意设计更多的实验并尝试理解它们！")]),t._v(" "),t._m(50)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用-pub-控制可见性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-pub-控制可见性","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),e("code",[this._v("pub")]),this._v(" 控制可见性")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("我们通过将 "),n("code",[t._v("network")]),t._v(" 和 "),n("code",[t._v("network::server")]),t._v(" 的代码分别移动到 "),n("em",[t._v("src/network/mod.rs")]),t._v(" 和 "),n("em",[t._v("src/network/server.rs")]),t._v(" 文件中解决了示例 7-5 中出现的错误信息。现在，"),n("code",[t._v("cargo build")]),t._v(" 能够构建我们的项目，不过仍然有一些警告信息，表示 "),n("code",[t._v("client::connect")]),t._v("、"),n("code",[t._v("network::connect")]),t._v(" 和"),n("code",[t._v("network::server::connect")]),t._v(" 函数没有被使用：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("warning: function is never used: `connect`\n --\x3e src/client.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n  |\n  = note: #[warn(dead_code)] on by default\n\nwarning: function is never used: `connect`\n --\x3e src/network/mod.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n\nwarning: function is never used: `connect`\n --\x3e src/network/server.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("那么为什么会出现这些警告信息呢？毕竟我们构建的是一个库，它的函数的目的是被 "),e("strong",[this._v("用户")]),this._v(" 使用，而不一定要被项目自身使用，所以不应该担心这些 "),e("code",[this._v("connect")]),this._v(" 函数是未使用的。创建它们的意义就在于被另一个项目而不是被我们自己使用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("为了理解为什么这个程序出现了这些警告，尝试在另一个项目中使用这个 "),e("code",[this._v("connect")]),this._v(" 库，从外部调用它们。为此，通过创建一个包含这些代码的 "),e("em",[this._v("src/main.rs")]),this._v(" 文件，在与库 crate 相同的目录创建一个二进制 crate：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("extern crate communicator;\n\nfn main() {\n    communicator::client::connect();\n}\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("使用 "),n("code",[t._v("extern crate")]),t._v(" 指令将 "),n("code",[t._v("communicator")]),t._v(" 库 crate 引入到作用域。我们的包现在包含 "),n("strong",[t._v("两个")]),t._v(" crate。Cargo 认为 "),n("em",[t._v("src/main.rs")]),t._v(" 是一个二进制 crate 的根文件，与现存的以 "),n("em",[t._v("src/lib.rs")]),t._v(" 为根文件的库 crate 相区分。这个模式在可执行项目中非常常见：大部分功能位于库 crate 中，而二进制 crate 使用该库 crate。通过这种方式，其他程序也可以使用这个库 crate，这是一个很好的关注分离（separation of concerns）。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("从一个外部 crate 的视角观察 "),n("code",[t._v("communicator")]),t._v(" 库的内部，我们创建的所有模块都位于一个与 crate 同名的模块内部，"),n("code",[t._v("communicator")]),t._v("。这个顶层的模块被称为 crate 的 "),n("strong",[t._v("根模块")]),t._v("（"),n("em",[t._v("root module")]),t._v("）。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("另外注意到即便在项目的子模块中使用外部 crate，"),e("code",[this._v("extern crate")]),this._v(" 也应该位于根模块（也就是 "),e("em",[this._v("src/main.rs")]),this._v(" 或 "),e("em",[this._v("src/lib.rs")]),this._v("）。接着，在子模块中，我们就可以像顶层模块那样引用外部 crate 中的项了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("我们的二进制 crate 如今正好调用了库中 "),e("code",[this._v("client")]),this._v(" 模块的 "),e("code",[this._v("connect")]),this._v(" 函数。然而，执行 "),e("code",[this._v("cargo build")]),this._v(" 会在之前的警告之后出现一个错误：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("error[E0603]: module `client` is private\n --\x3e src/main.rs:4:5\n  |\n4 |     communicator::client::connect();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("啊哈！这告诉了我们 "),n("code",[t._v("client")]),t._v(" 模块是私有的，这也正是那些警告的症结所在。这也是我们第一次在 Rust 上下文中涉及到 "),n("strong",[t._v("公有")]),t._v("（"),n("em",[t._v("public")]),t._v("）和 "),n("strong",[t._v("私有")]),t._v("（"),n("em",[t._v("private")]),t._v("）的概念。Rust 所有代码的默认状态是私有的：除了自己之外别人不允许使用这些代码。如果不在自己的项目中使用一个私有函数，因为程序自身是唯一允许使用这个函数的代码，Rust 会警告说函数未被使用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("一旦我们指定一个像 "),e("code",[this._v("client::connect")]),this._v(" 的函数为公有，不光二进制 crate 中的函数调用是允许的，函数未被使用的警告也会消失。将其标记为公有让 Rust 知道了函数将会在程序的外部被使用。现在这个可能的理论上的外部可用性使得 Rust 认为这个函数 “已经被使用”。因此。当某项被标记为公有，Rust 不再要求它在程序自身被使用并停止警告函数未被使用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"标记函数为公有"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标记函数为公有","aria-hidden":"true"}},[this._v("#")]),this._v(" 标记函数为公有")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("为了告诉 Rust 将函数标记为公有，在声明的开头增加 "),n("code",[t._v("pub")]),t._v(" 关键字。现在我们将致力于修复 "),n("code",[t._v("client::connect")]),t._v(" 未被使用的警告，以及二进制 crate 中 “模块 "),n("code",[t._v("client")]),t._v(" 是私有的” 的错误。像这样修改 "),n("em",[t._v("src/lib.rs")]),t._v(" 使 "),n("code",[t._v("client")]),t._v(" 模块公有：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pub mod client;\n\nmod network;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("pub")]),this._v(" 写在 "),e("code",[this._v("mod")]),this._v(" 之前。再次尝试构建：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("error[E0603]: function `connect` is private\n --\x3e src/main.rs:4:5\n  |\n4 |     communicator::client::connect();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("非常好！另一个不同的错误！好的，不同的错误信息也是值得庆祝的。新错误表明“函数 "),e("code",[this._v("connect")]),this._v(" 是私有的”，那么让我们修改 "),e("em",[this._v("src/client.rs")]),this._v(" 将 "),e("code",[this._v("client::connect")]),this._v(" 也设为公有：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/client.rs")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("再一次运行 "),e("code",[this._v("cargo build")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("warning: function is never used: `connect`\n --\x3e src/network/mod.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n  |\n  = note: #[warn(dead_code)] on by default\n\nwarning: function is never used: `connect`\n --\x3e src/network/server.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("编译通过了，关于 "),e("code",[this._v("client::connect")]),this._v(" 未被使用的警告消失了！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("未被使用的代码并不总是意味着它们需要被设为公有的：如果你 "),e("strong",[this._v("不")]),this._v(" 希望这些函数成为公有 API 的一部分，未被使用的代码警告可能是在提醒你这些代码不再需要并可以安全地删除它们。这也可能是警告你出 bug 了，如果你刚刚不小心删除了库中所有这个函数的调用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当然我们的情况是，"),e("strong",[this._v("确实")]),this._v(" 希望另外两个函数也作为 crate 公有 API 的一部分，所以让我们也将其标记为 "),e("code",[this._v("pub")]),this._v(" 并去掉剩余的警告。修改 "),e("em",[this._v("src/network/mod.rs")]),this._v(" 为：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/network/mod.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pub fn connect() {\n}\n\nmod server;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("warning: function is never used: `connect`\n --\x3e src/network/mod.rs:1:1\n  |\n1 | / pub fn connect() {\n2 | | }\n  | |_^\n  |\n  = note: #[warn(dead_code)] on by default\n\nwarning: function is never used: `connect`\n --\x3e src/network/server.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("虽然将 "),n("code",[t._v("network::connect")]),t._v(" 设为 "),n("code",[t._v("pub")]),t._v(" 了，我们仍然得到了一个未被使用函数的警告。这是因为模块中的函数是公有的，不过函数所在的 "),n("code",[t._v("network")]),t._v(" 模块却不是公有的。这回我们是自内向外修改库文件的，而 "),n("code",[t._v("client::connect")]),t._v(" 的时候是自外向内修改的。我们需要修改 "),n("em",[t._v("src/lib.rs")]),t._v(" 让 "),n("code",[t._v("network")]),t._v(" 也是公有的，如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pub mod client;\n\npub mod network;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("warning: function is never used: `connect`\n --\x3e src/network/server.rs:1:1\n  |\n1 | / fn connect() {\n2 | | }\n  | |_^\n  |\n  = note: #[warn(dead_code)] on by default\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"私有性规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有性规则","aria-hidden":"true"}},[this._v("#")]),this._v(" 私有性规则")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("如果一个项是公有的，它能被任何父模块访问")]),this._v(" "),e("li",[this._v("如果一个项是私有的，它能被其直接父模块及其任何子模块访问")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"私有性示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#私有性示例","aria-hidden":"true"}},[this._v("#")]),this._v(" 私有性示例")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("让我们看看更多私有性的例子作为练习。创建一个新的库项目并在新项目的 "),e("em",[this._v("src/lib.rs")]),this._v(" 输入示例 7-6 中的代码：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("mod outermost {\n    pub fn middle_function() {}\n\n    fn middle_secret_function() {}\n\n    mod inside {\n        pub fn inner_function() {}\n\n        fn secret_function() {}\n    }\n}\n\nfn try_me() {\n    outermost::middle_function();\n    outermost::middle_secret_function();\n    outermost::inside::inner_function();\n    outermost::inside::secret_function();\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"caption"},[this._v("示例 7-6：私有和公有函数的例子，其中部分是不正确的")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在尝试编译这些代码之前，猜测一下 "),e("code",[this._v("try_me")]),this._v(" 函数的哪一行会出错。接着编译项目来看看是否猜对了，然后继续阅读后面关于错误的讨论！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"检查错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查错误","aria-hidden":"true"}},[this._v("#")]),this._v(" 检查错误")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[n("code",[t._v("try_me")]),t._v(" 函数位于项目的根模块。叫做 "),n("code",[t._v("outermost")]),t._v(" 的模块是私有的，不过第二条私有性规则说明 "),n("code",[t._v("try_me")]),t._v(" 函数允许访问 "),n("code",[t._v("outermost")]),t._v(" 模块，因为 "),n("code",[t._v("outermost")]),t._v(" 位于当前（根）模块，"),n("code",[t._v("try_me")]),t._v(" 也是。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[n("code",[t._v("outermost::middle_function")]),t._v(" 的调用是正确的。因为 "),n("code",[t._v("middle_function")]),t._v(" 是公有的，而 "),n("code",[t._v("try_me")]),t._v(" 通过其父模块 "),n("code",[t._v("outermost")]),t._v(" 访问 "),n("code",[t._v("middle_function")]),t._v("。根据上一段的规则我们可以确定这个模块是可访问的。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[n("code",[t._v("outermost::middle_secret_function")]),t._v(" 的调用会造成一个编译错误。"),n("code",[t._v("middle_secret_function")]),t._v(" 是私有的，所以第二条（私有性）规则生效了。根模块既不是 "),n("code",[t._v("middle_secret_function")]),t._v(" 的当前模块（"),n("code",[t._v("outermost")]),t._v(" 是），也不是 "),n("code",[t._v("middle_secret_function")]),t._v(" 当前模块的子模块。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("叫做 "),n("code",[t._v("inside")]),t._v(" 的模块是私有的且没有子模块，所以它只能被当前模块 "),n("code",[t._v("outermost")]),t._v(" 访问。这意味着 "),n("code",[t._v("try_me")]),t._v(" 函数不允许调用 "),n("code",[t._v("outermost::inside::inner_function")]),t._v(" 或 "),n("code",[t._v("outermost::inside::secret_function")]),t._v(" 中的任何一个。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"修改错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改错误","aria-hidden":"true"}},[this._v("#")]),this._v(" 修改错误")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("如果 "),n("code",[t._v("inside")]),t._v(" 模块是公有的？")]),t._v(" "),n("li",[t._v("如果 "),n("code",[t._v("outermost")]),t._v(" 是公有的而 "),n("code",[t._v("inside")]),t._v(" 是私有的？")]),t._v(" "),n("li",[t._v("如果在 "),n("code",[t._v("inner_function")]),t._v(" 函数体中调用 "),n("code",[t._v("::outermost::middle_secret_function()")]),t._v("？（开头的两个冒号意味着从根模块开始引用模块。）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("接下来，让我们讨论一下使用 "),e("code",[this._v("use")]),this._v(" 关键字将项引入作用域。")])}],!1,null,null,null);r.options.__file="ch07-02-controlling-visibility-with-pub.md";e.default=r.exports}}]);