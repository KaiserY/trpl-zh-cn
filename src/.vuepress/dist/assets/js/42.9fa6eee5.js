(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{228:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/second-edition/src/ch07-03-importing-names-with-use.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch07-03-importing-names-with-use.md"),n("OutboundLink")],1),t._v(" "),n("br"),t._v("\ncommit 550c8ea6f74060ff1f7b67e7e1878c4da121682d")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),n("p",[t._v("如你所见，指定函数的完全限定名称可能会非常冗长。所幸 Rust 有一个关键字使得这些调用显得更简洁。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),n("p",[t._v("这使得我们可以忽略所有的模块并直接引用函数。")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._m(43),t._v(" "),n("p",[t._v("现在你掌握了组织代码的核心科技！利用它们将相关的代码组合在一起、防止代码文件过长并将一个整洁的公有 API 展现给库的用户。")]),t._v(" "),n("p",[t._v("接下来，让我们看看一些标准库提供的集合数据类型，你可以利用它们编写出漂亮整洁的代码。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"引用不同模块中的名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用不同模块中的名称","aria-hidden":"true"}},[this._v("#")]),this._v(" 引用不同模块中的名称")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们已经讲到了如何使用模块名称作为调用的一部分，来调用模块中的函数，如示例 7-7 中所示的 "),s("code",[this._v("nested_modules")]),this._v(" 函数调用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" a "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" series "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" of "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("series"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("of"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-7：通过完全指定模块中的路径来调用函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-use-关键字将名称导入作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-use-关键字将名称导入作用域","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),s("code",[this._v("use")]),this._v(" 关键字将名称导入作用域")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Rust 的 "),s("code",[this._v("use")]),this._v(" 关键字能将你想要调用的函数所在的模块引入到当前作用域中，通过这种方式可以缩短冗长的函数调用。这是一个将 "),s("code",[this._v("a::series::of")]),this._v(" 模块导入一个二进制 crate 的根作用域的例子：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" a "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" series "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" of "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("series"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("of"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    of"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("use a::series::of;")]),t._v(" 这一行的意思是每当想要引用 "),n("code",[t._v("of")]),t._v(" 模块时，不必使用完整的 "),n("code",[t._v("a::series::of")]),t._v(" 路径，可以直接使用 "),n("code",[t._v("of")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("use")]),this._v(" 关键字只将指定的模块引入作用域；它并不会将其子模块也引入。这就是为什么想要调用 "),s("code",[this._v("nested_modules")]),this._v(" 函数时仍然必须写成 "),s("code",[this._v("of::nested_modules")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("也可以将函数本身引入到作用域中，通过如下在 "),s("code",[this._v("use")]),this._v(" 中指定函数的方式：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" a "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" series "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" of "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" a"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("series"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("of"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nested_modules"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("nested_modules")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因为枚举也像模块一样组成了某种命名空间，也可以使用 "),s("code",[this._v("use")]),this._v(" 来导入枚举的成员。对于任何类型的 "),s("code",[this._v("use")]),this._v(" 语句，如果从一个命名空间导入多个项，可以在最后使用大括号和逗号来列举它们，像这样：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" TrafficLight "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Red"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Yellow"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Green"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" TrafficLight"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Red"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Yellow"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" red "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Red"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" yellow "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Yellow"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" green "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" TrafficLight"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Green"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("我们仍然为 "),n("code",[t._v("Green")]),t._v(" 成员指定了 "),n("code",[t._v("TrafficLight")]),t._v(" 命名空间，因为并没有在 "),n("code",[t._v("use")]),t._v(" 语句中包含 "),n("code",[t._v("Green")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-glob-将所有名称引入作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-glob-将所有名称引入作用域","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 glob 将所有名称引入作用域")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为了一次将某个命名空间下的所有名称都引入作用域，可以使用 "),s("code",[this._v("*")]),this._v(" 语法，这称为 "),s("strong",[this._v("glob 运算符")]),this._v("（"),s("em",[this._v("glob operator")]),this._v("）。这个例子将一个枚举的所有成员引入作用域而没有将其一一列举出来：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" TrafficLight "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Red"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Yellow"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Green"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" TrafficLight"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" red "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Red"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" yellow "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Yellow"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" green "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Green"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("*")]),this._v(" 会将 "),s("code",[this._v("TrafficLight")]),this._v(" 命名空间中所有可见的项都引入作用域。请保守的使用 glob：它们是方便的，但是也可能会引入多于预期的内容从而导致命名冲突。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-super-访问父模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-super-访问父模块","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),s("code",[this._v("super")]),this._v(" 访问父模块")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("正如我们已经知道的，当创建一个库 crate 时，Cargo 会生成一个 "),s("code",[this._v("tests")]),this._v(" 模块。现在让我们来深入了解一下。在 "),s("code",[this._v("communicator")]),this._v(" 项目中，打开 "),s("em",[this._v("src/lib.rs")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("pub mod client;\n\npub mod network;\n\n#[cfg(test)]\nmod tests {\n    #[test]\n    fn it_works() {\n        assert_eq!(2 + 2, 4);\n    }\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第十一章会更详细的解释测试，不过其中部分内容现在应该可以理解了：有一个叫做 "),s("code",[this._v("tests")]),this._v(" 的模块紧邻其他模块，同时包含一个叫做 "),s("code",[this._v("it_works")]),this._v(" 的函数。即便存在一些特殊注解，"),s("code",[this._v("tests")]),this._v(" 也不过是另外一个模块！所以我们的模块层次结构看起来像这样：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("communicator\n ├── client\n ├── network\n |   └── client\n └── tests\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("测试是为了检验库中的代码而存在的，所以让我们尝试在 "),s("code",[this._v("it_works")]),this._v(" 函数中调用 "),s("code",[this._v("client::connect")]),this._v(" 函数，即便现在不准备测试任何功能。这还不能工作：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("it_works")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 "),s("code",[this._v("cargo test")]),this._v(" 命令运行测试：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ cargo test\n   Compiling communicator v0.1.0 (file:///projects/communicator)\nerror[E0433]: failed to resolve. Use of undeclared type or module `client`\n --\x3e src/lib.rs:9:9\n  |\n9 |         client::connect();\n  |         ^^^^^^ Use of undeclared type or module `client`\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("编译失败了，不过为什么呢？并不需要像 "),n("em",[t._v("src/main.rs")]),t._v(" 那样将 "),n("code",[t._v("communicator::")]),t._v(" 置于函数前，因为这里肯定是在 "),n("code",[t._v("communicator")]),t._v(" 库 crate 之内的。失败的原因是路径是相对于当前模块的，在这里就是 "),n("code",[t._v("tests")]),t._v("。唯一的例外就是 "),n("code",[t._v("use")]),t._v(" 语句，它默认是相对于 crate 根模块的。我们的 "),n("code",[t._v("tests")]),t._v(" 模块需要 "),n("code",[t._v("client")]),t._v(" 模块位于其作用域中！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("那么如何在模块层次结构中回退一级模块，以便在 "),s("code",[this._v("tests")]),this._v(" 模块中能够调用 "),s("code",[this._v("client::connect")]),this._v("函数呢？在 "),s("code",[this._v("tests")]),this._v(" 模块中，要么可以在开头使用双冒号来让 Rust 知道我们想要从根模块开始并列出整个路径：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("::client::connect();\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("要么可以使用 "),s("code",[this._v("super")]),this._v(" 在层级中上移到当前模块的上一级模块，如下：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("super::client::connect();\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在这个例子中这两个选择看不出有多么大的区别，不过随着模块层次的更加深入，每次都从根模块开始就会显得很长了。在这些情况下，使用 "),s("code",[this._v("super")]),this._v(" 来获取当前模块的同级模块是一个好的捷径。再加上，如果在代码中的很多地方指定了从根开始的路径，那么当通过移动子树或到其他位置来重新排列模块时，最终就需要更新很多地方的路径，这就非常乏味无趣了。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在每一个测试中总是不得不编写 "),n("code",[t._v("super::")]),t._v(" 也会显得很恼人，不过你已经见过解决这个问题的利器了："),n("code",[t._v("use")]),t._v("！"),n("code",[t._v("super::")]),t._v(" 的功能改变了提供给 "),n("code",[t._v("use")]),t._v(" 的路径，使其不再相对于根模块而是相对于父模块。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为此，特别是在 "),s("code",[this._v("tests")]),this._v(" 模块，"),s("code",[this._v("use super::something")]),this._v(" 是常用的手段。所以现在的测试看起来像这样：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("it_works")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        client"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("connect")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果再次运行"),s("code",[this._v("cargo test")]),this._v("，测试将会通过而且测试结果输出的第一部分将会是：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ cargo test\n   Compiling communicator v0.1.0 (file:///projects/communicator)\n     Running target/debug/communicator-92007ddb5330fa5a\n\nrunning 1 test\ntest tests::it_works ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])}],!1,null,null,null);e.options.__file="ch07-03-importing-names-with-use.md";s.default=e.exports}}]);