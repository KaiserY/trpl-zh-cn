(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{229:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch07-02-modules-and-use-to-control-scope-and-privacy.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch07-01-mod-and-the-filesystem.md"),n("OutboundLink")],1),t._v(" "),n("br"),t._v("\ncommit 820ac357f6cf0e866e5a8e7a9c57dd3e17e9f8ca")])]),t._v(" "),n("p",[t._v("Rust 的此部分功能通常被引用为 “模块系统”（“the module system”），不过其包括了一些除模块之外的功能。在本部分我们会讨论：")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("为了将代码组织到模块层次体系中，可以将模块嵌套进其他模块，如示例 7-2 所示：")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),n("p",[t._v("示例 7-4 提到了它并不能编译，让我们尝试编译并看看为什么不行！示例 7-5 展示了错误。")]),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._v(" "),n("p",[t._v("不过示例 7-6 中的代码仍然产生错误，如示例 7-7 所示：")]),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),n("p",[t._v("可以以模块与函数相同的方式来设计公有的结构体和枚举，不过有一些额外的细节。")]),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._v(" "),t._m(87),t._m(88),t._v(" "),t._m(89),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._m(93),t._v(" "),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._v(" "),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._m(107),t._v(" "),t._m(108),t._v(" "),t._m(109),t._v(" "),t._m(110),t._v(" "),t._m(111),t._v(" "),t._m(112),t._v(" "),t._m(113),t._m(114),t._v(" "),t._m(115),t._v(" "),t._m(116),t._v(" "),t._m(117),t._v(" "),t._m(118),t._v(" "),t._m(119),t._m(120),t._v(" "),t._m(121),t._v(" "),t._m(122),t._m(123),t._v(" "),t._m(124),t._v(" "),t._m(125),t._m(126),t._v(" "),t._m(127),t._v(" "),t._m(128),t._v(" "),t._m(129),t._v(" "),t._m(130),n("p",[t._v("可以使用嵌套的路径将同样的项在一行中引入而不是两行，这么做需要指定路径的相同部分，接着是两个分号，接着是大括号中的各自不同的路径部分，如示例 7-22 所示。")]),t._v(" "),t._m(131),t._v(" "),t._m(132),t._m(133),t._v(" "),t._m(134),t._v(" "),t._m(135),t._v(" "),t._m(136),t._v(" "),t._m(137),t._m(138),t._v(" "),t._m(139),t._v(" "),t._m(140),t._v(" "),t._m(141),t._m(142),t._v(" "),t._m(143),t._v(" "),t._m(144),t._v(" "),t._m(145),t._v(" "),t._m(146),t._m(147),t._v(" "),n("p",[t._v("使用 glob 运算符时请多加小心！如此难以推导作用域中有什么名称和它们是在何处定义的。")]),t._v(" "),n("p",[t._v("glob 运算符经常用于测试模块 "),n("code",[t._v("tests")]),t._v(" 中，这时会将所有内容引入作用域；我们将在第十一章 “如何编写测试” 部分讲解。glob 运算符有时也用于 prelude 模式；查看 "),n("a",{attrs:{href:"https://doc.rust-lang.org/std/prelude/index.html#other-preludes",target:"_blank",rel:"noopener noreferrer"}},[t._v("标准库中的文档"),n("OutboundLink")],1),t._v(" 了解这个模式的更多细节。")]),t._v(" "),t._m(148),t._v(" "),n("p",[t._v("目前本章所有的例子都在一个文件中定义多个模块。当模块变得更大时，你可能想要将它们的定义移动到一个单独的文件中使代码更容易阅读。")]),t._v(" "),t._m(149),t._v(" "),t._m(150),t._v(" "),t._m(151),t._m(152),t._v(" "),t._m(153),t._v(" "),t._m(154),t._v(" "),t._m(155),t._m(156),t._v(" "),t._m(157),t._v(" "),t._m(158),t._v(" "),t._m(159),t._v(" "),t._m(160),t._m(161),t._v(" "),t._m(162),t._v(" "),t._m(163),t._m(164),t._v(" "),t._m(165),t._v(" "),t._m(166),t._v(" "),n("p",[t._v("接下来，让我们看看一些标准库提供的集合数据类型，你可以利用它们编写出漂亮整洁的代码。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"模块系统用来控制作用域和私有性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块系统用来控制作用域和私有性","aria-hidden":"true"}},[this._v("#")]),this._v(" 模块系统用来控制作用域和私有性")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("模块，一个组织代码和控制路径私有性的方式")]),t._v(" "),n("li",[t._v("路径，一个命名项（item）的方式")]),t._v(" "),n("li",[n("code",[t._v("use")]),t._v(" 关键字用来将路径引入作用域")]),t._v(" "),n("li",[n("code",[t._v("pub")]),t._v(" 关键字使项变为公有")]),t._v(" "),n("li",[n("code",[t._v("as")]),t._v(" 关键字用于将项引入作用域时进行重命名")]),t._v(" "),n("li",[t._v("使用外部包")]),t._v(" "),n("li",[t._v("嵌套路径用来消除大量的 "),n("code",[t._v("use")]),t._v(" 语句")]),t._v(" "),n("li",[t._v("使用 glob 运算符将模块的所有内容引入作用域")]),t._v(" "),n("li",[t._v("如何将不同模块分割到单独的文件中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("首先讲讲模块。模块允许我们将代码组织起来。示例 7-1 是一个例子，这些代码定义了名为 "),s("code",[this._v("sound")]),this._v(" 的模块，其包含名为 "),s("code",[this._v("guitar")]),this._v(" 的函数。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("guitar")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-1: 包含 "),s("code",[this._v("guitar")]),this._v(" 函数和 "),s("code",[this._v("main")]),this._v(" 函数的 "),s("code",[this._v("sound")]),this._v(" 模块")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这里定义了两个函数，"),n("code",[t._v("guitar")]),t._v(" 和 "),n("code",[t._v("main")]),t._v("。"),n("code",[t._v("guitar")]),t._v(" 函数定义于 "),n("code",[t._v("mod")]),t._v(" 块中。这个块定义了 "),n("code",[t._v("sound")]),t._v(" 模块。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" woodwind "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" voice "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-2: 模块中的模块")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在这个例子中，我们像示例 7-1 一样定义了 "),n("code",[t._v("sound")]),t._v(" 模块。接着在 "),n("code",[t._v("sound")]),t._v(" 模块中定义了 "),n("code",[t._v("instrument")]),t._v(" 和 "),n("code",[t._v("voice")]),t._v(" 模块。"),n("code",[t._v("instrument")]),t._v(" 模块中定义了另一个模块 "),n("code",[t._v("woodwind")]),t._v("，这个模块包含一个函数 "),n("code",[t._v("clarinet")]),t._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在 “包和 crate 用来创建库和二进制项目” 部分提到 "),n("em",[t._v("src/main.rs")]),t._v(" 和 "),n("em",[t._v("src/lib.rs")]),t._v(" 被称为 "),n("strong",[t._v("crate 根")]),t._v("。他们被称为 crate 根是因为这两个文件在 crate 模块树的根组成了名为 "),n("code",[t._v("crate")]),t._v(" 模块。所以示例 7-2 中，有如示例 7-3 所示的模块树：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("crate\n └── sound\n     └── instrument\n        └── woodwind\n     └── voice\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-3: 示例 7-2 中代码的模块树")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这个树展示了模块如何嵌套在其他模块中（比如 "),n("code",[t._v("woodwind")]),t._v(" 嵌套在 "),n("code",[t._v("instrument")]),t._v(" 中）以及模块如何作为其他模块的子模块的（"),n("code",[t._v("instrument")]),t._v(" 和 "),n("code",[t._v("voice")]),t._v(" 都定义在 "),n("code",[t._v("sound")]),t._v(" 中）。整个模块树都位于名为 "),n("code",[t._v("crate")]),t._v(" 这个隐式模块的根下。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这个树可能会令你想起电脑上文件系统的目录树；这是一个非常恰当的比喻！就像文件系统的目录，将代码放入任意模块也将创建对应的组织结构体。另一个相似点是为了引用文件系统或模块树中的项，需要使用 "),s("strong",[this._v("路径")]),this._v("（"),s("em",[this._v("path")]),this._v("）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"路径用来引用模块树中的项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径用来引用模块树中的项","aria-hidden":"true"}},[this._v("#")]),this._v(" 路径用来引用模块树中的项")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果想要调用函数，需要知道其 "),s("strong",[this._v("路径")]),this._v("。“路径” 是 “名称”（“name”） 的同义词，不过它用于文件系统语境。另外，函数、结构体和其他项可能会有多个指向相同项的路径，所以 “名称” 这个概念不太准确。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("路径")]),this._v(" 可以有两种形式：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("strong",[t._v("绝对路径")]),t._v("（"),n("em",[t._v("absolute path")]),t._v("）从 crate 根开始，以 crate 名或者字面值 "),n("code",[t._v("crate")]),t._v(" 开头。")]),t._v(" "),n("li",[n("strong",[t._v("相对路径")]),t._v("（"),n("em",[t._v("relative path")]),t._v("）从当前模块开始，以 "),n("code",[t._v("self")]),t._v("、"),n("code",[t._v("super")]),t._v(" 或当前模块的标识符开头。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("绝对路径和相对路径都后跟一个或多个由双分号（"),s("code",[this._v("::")]),this._v("）分割的标识符。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如何在示例 7-2 的 "),n("code",[t._v("main")]),t._v(" 函数中调用 "),n("code",[t._v("clarinet")]),t._v(" 函数呢？也就是说，"),n("code",[t._v("clarinet")]),t._v(" 函数的路径是什么呢？在示例 7-4 中稍微简化了代码，移除了一些模块，并展示了两种在 "),n("code",[t._v("main")]),t._v(" 中调用 "),n("code",[t._v("clarinet")]),t._v(" 函数的方式。这个例子还不能编译，我们会解释为什么。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("mod sound {\n    mod instrument {\n        fn clarinet() {\n            // 函数体\n        }\n    }\n}\n\nfn main() {\n    // 绝对路径\n    crate::sound::instrument::clarinet();\n\n    // Relative path\n    sound::instrument::clarinet();\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-4: 在简化的模块树中，分别使用绝对路径和相对路径在 "),s("code",[this._v("main")]),this._v(" 中调用 "),s("code",[this._v("clarinet")]),this._v(" 函数")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("第一种从 "),n("code",[t._v("main")]),t._v(" 函数中调用 "),n("code",[t._v("clarinet")]),t._v(" 函数的方式使用绝对路径。因为 "),n("code",[t._v("clarinet")]),t._v(" 与 "),n("code",[t._v("main")]),t._v(" 定义于同一 crate 中，我们使用 "),n("code",[t._v("crate")]),t._v(" 关键字来开始绝对路径。接着包含每一个模块直到 "),n("code",[t._v("clarinet")]),t._v("。这类似于指定 "),n("code",[t._v("/sound/instrument/clarinet")]),t._v(" 来运行电脑上这个位置的程序；使用 "),n("code",[t._v("crate")]),t._v(" 从 crate 根开始就类似于在 shell 中使用 "),n("code",[t._v("/")]),t._v(" 从文件系统根开始。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("第二种从 "),n("code",[t._v("main")]),t._v(" 函数中调用 "),n("code",[t._v("clarinet")]),t._v(" 函数的方式使用相对路径。该路径以 "),n("code",[t._v("sound")]),t._v(" 开始，它是定义于与 "),n("code",[t._v("main")]),t._v(" 函数相同模块树级别的模块。这类似于指定 "),n("code",[t._v("sound/instrument/clarinet")]),t._v(" 来运行电脑上这个位置的程序；以名称开头意味着路径是相对的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ cargo build\n   Compiling sampleproject v0.1.0 (file:///projects/sampleproject)\nerror[E0603]: module `instrument` is private\n  --\x3e src/main.rs:11:19\n   |\n11 |     crate::sound::instrument::clarinet();\n   |                   ^^^^^^^^^^\n\nerror[E0603]: module `instrument` is private\n  --\x3e src/main.rs:14:12\n   |\n14 |     sound::instrument::clarinet();\n   |            ^^^^^^^^^^\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-5: 构建示例 7-4 出现的编译器错误")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("错误信息说 "),n("code",[t._v("instrument")]),t._v(" 模块是私有的。可以看到 "),n("code",[t._v("instrument")]),t._v(" 模块和 "),n("code",[t._v("clarinet")]),t._v(" 函数的路径是正确的，不过 Rust 不让我们使用，因为他们是私有的。现在是学习 "),n("code",[t._v("pub")]),t._v(" 关键字的时候了！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"模块作为私有性的边界"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块作为私有性的边界","aria-hidden":"true"}},[this._v("#")]),this._v(" 模块作为私有性的边界")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("之前我们讨论到模块的语法和组织代码的用途。Rust 采用模块还有另一个原因：模块是 Rust 中的 "),s("strong",[this._v("私有性边界")]),this._v("（"),s("em",[this._v("privacy boundary")]),this._v("）。如果你希望函数或结构体是私有的，将其放入模块。私有性规则有如下：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[t._v("所有项（函数、方法、结构体、枚举、模块和常量）默认是私有的。")]),t._v(" "),n("li",[t._v("可以使用 "),n("code",[t._v("pub")]),t._v(" 关键字使项变为共有。")]),t._v(" "),n("li",[t._v("不允许使用定义于当前模块的子模块中的私有代码。")]),t._v(" "),n("li",[t._v("允许使用任何定义于父模块或当前模块中的代码。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("换句话说，对于没有 "),s("code",[this._v("pub")]),this._v(" 关键字的项，当你从当前模块向 “下” 看时是私有的，不过当你向 “上” 看时是公有的。再一次想象一下文件系统：如果你没有某个目录的权限，则无法从父目录中查看其内容。如果有该目录的权限，则可以查看其中的目录和任何父目录。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-pub-关键字使项变为公有"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-pub-关键字使项变为公有","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),s("code",[this._v("pub")]),this._v(" 关键字使项变为公有")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("示例 7-5 中的错误说 "),n("code",[t._v("instrument")]),t._v(" 模块使私有的。让我们使用 "),n("code",[t._v("pub")]),t._v(" 关键字标记 "),n("code",[t._v("instrument")]),t._v(" 模块使其可以在 "),n("code",[t._v("main")]),t._v(" 函数中使用。这些改变如示例 7-6 所示，它仍然不能编译，不过会产生一个不同的错误：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("mod sound {\n    pub mod instrument {\n        fn clarinet() {\n            // 函数体\n        }\n    }\n}\n\nfn main() {\n    // Absolute path\n    crate::sound::instrument::clarinet();\n\n    // Relative path\n    sound::instrument::clarinet();\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-6: 将 "),s("code",[this._v("instrument")]),this._v(" 模块声明为 "),s("code",[this._v("pub")]),this._v(" 以便可以在 "),s("code",[this._v("main")]),this._v(" 中使用")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在 "),n("code",[t._v("mod instrument")]),t._v(" 之前增加 "),n("code",[t._v("pub")]),t._v(" 关键字使得模块变为公有。通过这个改变如果允许访问 "),n("code",[t._v("sound")]),t._v(" 的话，我们就可以访问 "),n("code",[t._v("instrument")]),t._v("。"),n("code",[t._v("instrument")]),t._v(" 的内容仍然是私有的；使得模块公有并不使其内容也是公有的。模块上的 "),n("code",[t._v("pub")]),t._v(" 关键字允许其父模块引用它。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$ cargo build\n   Compiling sampleproject v0.1.0 (file:///projects/sampleproject)\nerror[E0603]: function `clarinet` is private\n  --\x3e src/main.rs:11:31\n   |\n11 |     crate::sound::instrument::clarinet();\n   |                               ^^^^^^^^\n\nerror[E0603]: function `clarinet` is private\n  --\x3e src/main.rs:14:24\n   |\n14 |     sound::instrument::clarinet();\n   |                        ^^^^^^^^\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-7: 构建示例 7-6 时产生的编译器错误")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在的错误表明 "),s("code",[this._v("clarinet")]),this._v(" 函数是私有的。私有性规则适用于结构体、枚举、函数和方法以及模块。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 "),s("code",[this._v("clarinet")]),this._v(" 函数前增加 "),s("code",[this._v("pub")]),this._v(" 关键字使其变为公有，如示例 7-8 所示：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 绝对路径")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 相对路径")]),t._v("\n    sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("span",{staticClass:"caption"},[t._v("示例 7-8: 在 "),n("code",[t._v("mod instrument")]),t._v(" 和 "),n("code",[t._v("fn clarinet")]),t._v(" 之前都增加 "),n("code",[t._v("pub")]),t._v(" 关键字使我们可以在 "),n("code",[t._v("main")]),t._v(" 中调用此函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在可以编译了！让我们看看绝对路径和相对路径再次检查为什么增加 "),s("code",[this._v("pub")]),this._v(" 关键字使得我们可以在 "),s("code",[this._v("main")]),this._v(" 中调用这些路径。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在绝对路径的情况下，我们从 "),n("code",[t._v("crate")]),t._v("，也就是 crate 根开始。从这开始有 "),n("code",[t._v("sound")]),t._v("，这是一个定义于 crate 根中的模块。"),n("code",[t._v("sound")]),t._v(" 模块不是公有的，不过因为 "),n("code",[t._v("main")]),t._v(" 函数与 "),n("code",[t._v("sound")]),t._v(" 定义于同一模块中，可以从 "),n("code",[t._v("main")]),t._v(" 中引用 "),n("code",[t._v("sound")]),t._v("。接下来是 "),n("code",[t._v("instrument")]),t._v("，这个模块标记为 "),n("code",[t._v("pub")]),t._v("。我们可以访问 "),n("code",[t._v("instrument")]),t._v(" 的父模块，所以可以访问 "),n("code",[t._v("instrument")]),t._v("。最后，"),n("code",[t._v("clarinet")]),t._v(" 函数被标记为 "),n("code",[t._v("pub")]),t._v(" 所以可以访问其父模块，所以这个函数调用是有效的！")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在相对路径的情况下，其逻辑与绝对路径相同，除了第一步。不同于从 crate 根开始，路径从 "),n("code",[t._v("sound")]),t._v(" 开始。"),n("code",[t._v("sound")]),t._v(" 模块与 "),n("code",[t._v("main")]),t._v(" 定义于同一模块，所以从 "),n("code",[t._v("main")]),t._v(" 所在模块开始定义的路径是有效的。接下来因为 "),n("code",[t._v("instrument")]),t._v(" 和 "),n("code",[t._v("clarinet")]),t._v(" 被标记为 "),n("code",[t._v("pub")]),t._v("，路径其余的部分也是有效的，因此函数调用也是有效的！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-super-开始相对路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-super-开始相对路径","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),s("code",[this._v("super")]),this._v(" 开始相对路径")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("也可以使用 "),n("code",[t._v("super")]),t._v(" 开头来构建相对路径。这么做类似于文件系统中以 "),n("code",[t._v("..")]),t._v(" 开头：该路径从 "),n("strong",[t._v("父")]),t._v(" 模块开始而不是当前模块。这在例如示例 7-9 这样的情况下有用处，在这里 "),n("code",[t._v("clarinet")]),t._v(" 函数通过指定以 "),n("code",[t._v("super")]),t._v(" 开头的路径调用 "),n("code",[t._v("breathe_in")]),t._v(" 函数：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("breathe_in")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("breathe_in")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-9: 使用以 "),s("code",[this._v("super")]),this._v(" 开头的路径从父目录开始调用函数")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("clarinet")]),t._v(" 函数位于 "),n("code",[t._v("instrument")]),t._v(" 模块中，所以可以使用 "),n("code",[t._v("super")]),t._v(" 进入 "),n("code",[t._v("instrument")]),t._v(" 的父模块，也就是根 "),n("code",[t._v("crate")]),t._v("。从这里可以找到 "),n("code",[t._v("breathe_in")]),t._v("。成功！")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("你可能想要使用 "),n("code",[t._v("super")]),t._v(" 开头的相对路而不是以 "),n("code",[t._v("crate")]),t._v(" 开头的绝对路径的原因是  "),n("code",[t._v("super")]),t._v(" 可能会使修改有着不同模块层级结构的代码变得更容易，如果定义项和调用项的代码被一同移动的话。例如，如果我们决定将 "),n("code",[t._v("instrument")]),t._v(" 模块和 "),n("code",[t._v("breathe_in")]),t._v(" 函数放入 "),n("code",[t._v("sound")]),t._v(" 模块中，这时我们只需增加 "),n("code",[t._v("sound")]),t._v(" 模块即可，如示例 7-10 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token keyword"}},[t._v("super")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("breathe_in")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("breathe_in")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Function body code goes here")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-10: 增加一个名为 "),s("code",[this._v("sound")]),this._v(" 的父模块并不影响相对路径 "),s("code",[this._v("super::breathe_in")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("示例 7-10 在 "),n("code",[t._v("clarinet")]),t._v(" 函数中调用 "),n("code",[t._v("super::breathe_in")]),t._v(" 将如示例 7-9 一样继续有效，无需更新路径。如果在 "),n("code",[t._v("clarinet")]),t._v(" 函数不使用 "),n("code",[t._v("super::breathe_in")]),t._v(" 而是使用 "),n("code",[t._v("crate::breathe_in")]),t._v(" 的话，当增加父模块 "),n("code",[t._v("sound")]),t._v(" 后，则需要更新 "),n("code",[t._v("clarinet")]),t._v(" 函数使用 "),n("code",[t._v("crate::sound::breathe_in")]),t._v(" 路径。使用相对路径可能意味着重新布局模块时需要更少的必要修改。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"对结构体和枚举使用-pub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对结构体和枚举使用-pub","aria-hidden":"true"}},[this._v("#")]),this._v(" 对结构体和枚举使用 "),s("code",[this._v("pub")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如果在结构体定义中使用 "),n("code",[t._v("pub")]),t._v("，可以使结构体公有。然而结构体的字段仍是私有的。可以在每一个字段的基准上选择其是否公有。在示例 7-11 中定义了一个公有结构体 "),n("code",[t._v("plant::Vegetable")]),t._v("，其包含公有的 "),n("code",[t._v("name")]),t._v(" 字段和私有的 "),n("code",[t._v("id")]),t._v(" 字段。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" plant "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Vegetable "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        id"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" i32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),t._v(" Vegetable "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("str"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Vegetable "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Vegetable "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                name"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                id"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" v "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" plant"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Vegetable"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"squash"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    v"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"butternut squash"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"{} are delicious"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 如果将如下行取消注释代码将无法编译:")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v('// println!("The ID is {}", v.id);')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-11: 结构体带有公有和私有的字段")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("因为 "),n("code",[t._v("plant::Vegetable")]),t._v(" 结构体的 "),n("code",[t._v("name")]),t._v(" 字段使公有的，在 "),n("code",[t._v("main")]),t._v(" 中可以使用点号读写 "),n("code",[t._v("name")]),t._v(" 字段。不允许在 "),n("code",[t._v("main")]),t._v(" 中使用 "),n("code",[t._v("id")]),t._v(" 字段因为其使私有的。尝试取消注释的行来打印 "),n("code",[t._v("id")]),t._v(" 字段的值来看看会出现什么错误！另外注意因为 "),n("code",[t._v("plant::Vegetable")]),t._v(" 有私有字段，需要提供一个公有的关联函数来构建 "),n("code",[t._v("Vegetable")]),t._v(" 的实例（这里使用了传统的名称 "),n("code",[t._v("new")]),t._v("）。如果 "),n("code",[t._v("Vegetable")]),t._v(" 没有提供这么一个函数，我们就不能在 "),n("code",[t._v("main")]),t._v(" 中创建 "),n("code",[t._v("Vegetable")]),t._v(" 的实例，因为在 "),n("code",[t._v("main")]),t._v(" 中不允许设置私有字段 "),n("code",[t._v("id")]),t._v(" 的值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("相反，如果有一个公有枚举，其所有成员都是公有。只需在 "),s("code",[this._v("enum")]),this._v(" 关键词前加上 "),s("code",[this._v("pub")]),this._v("，如示例 7-12 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" menu "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" Appetizer "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Soup"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Salad"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" order1 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" menu"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Appetizer"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Soup"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" order2 "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" menu"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Appetizer"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Salad"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-12: 将枚举设计为公有会使其所有成员公有")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("因为 "),n("code",[t._v("Appetizer")]),t._v(" 枚举是公有的，可以在 "),n("code",[t._v("main")]),t._v(" 中使用 "),n("code",[t._v("Soup")]),t._v(" and "),n("code",[t._v("Salad")]),t._v(" 成员。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("还有一种使用 "),n("code",[t._v("pub")]),t._v(" 的场景我们还没有涉及到，而这是我们最后要讲的模块功能："),n("code",[t._v("use")]),t._v(" 关键字。我们先单独介绍 "),n("code",[t._v("use")]),t._v("，然后展示如何结合使用 "),n("code",[t._v("pub")]),t._v(" 和 "),n("code",[t._v("use")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-use-关键字将名称引入作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-use-关键字将名称引入作用域","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 "),s("code",[this._v("use")]),this._v(" 关键字将名称引入作用域")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("你可能考虑过本章很多的函数调用的路径是冗长和重复的。例如示例 7-8 中，当我们选择 "),n("code",[t._v("clarinet")]),t._v(" 函数的绝对或相对路径时，每次想要调用 "),n("code",[t._v("clarinet")]),t._v(" 时都不得不也指定 "),n("code",[t._v("sound")]),t._v(" 和 "),n("code",[t._v("instrument")]),t._v("。幸运的是，有一次性将路径引入作用域然后就像调用本地项那样的方法：使用 "),n("code",[t._v("use")]),t._v(" 关键字。在示例 7-13 中将 "),n("code",[t._v("crate::sound::instrument")]),t._v(" 模块引入了 "),n("code",[t._v("main")]),t._v(" 函数的作用域，以便只需指定 "),n("code",[t._v("instrument::clarinet")]),t._v(" 来调用 "),n("code",[t._v("clarinet")]),t._v(" 函数。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-13: 使用 "),s("code",[this._v("use")]),this._v(" 将模块引入作用域并使用绝对路径来缩短在模块中调用项所必须的路径")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当指定 "),s("code",[this._v("use")]),this._v(" 后以 "),s("code",[this._v("self")]),this._v(" 开头的相对路径在未来可能不是必须的；这是一个开发者正在尽力消除的语言中的不一致。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如果调用项目的代码移动到模块树的不同位置但是定义项目的代码却没有，那么选择使用 "),n("code",[t._v("use")]),t._v(" 指定绝对路径可以使更新更轻松，这与示例 7-10 中同时移动的情况相对。例如，如果我们决定采用示例 7-13 的代码，将 "),n("code",[t._v("main")]),t._v(" 函数的行为提取到函数 "),n("code",[t._v("clarinet_trio")]),t._v(" 中，并将该函数移动到模块 "),n("code",[t._v("performance_group")]),t._v(" 中，这时 "),n("code",[t._v("use")]),t._v(" 所指定的路径无需变化，如示例 7-15 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" performance_group "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet_trio")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    performance_group"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet_trio")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-15: 移动调用项的代码时绝对路径无需移动")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("相反，如果对示例 7-14 中指定了相对路径的代码做同样的修改，则需要将 "),s("code",[this._v("use self::sound::instrument")]),this._v(" 变为 "),s("code",[this._v("use super::sound::instrument")]),this._v("。如果你不确定将来模块树会如何变化，那么选择采用相对或绝对路径是否会减少修改可能全靠猜测，不过本书的作者倾向于通过 "),s("code",[this._v("crate")]),this._v(" 指定绝对路径，因为定义和调用项的代码更有可能相互独立的在模块树中移动，而不是像示例 7-10 那样一同移动。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"use-函数路径使用习惯-vs-其他项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-函数路径使用习惯-vs-其他项","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("use")]),this._v(" 函数路径使用习惯 VS 其他项")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("示例 7-13 中，你可能会好奇为什么指定 "),s("code",[this._v("use crate::sound::instrument")]),this._v(" 接着在 "),s("code",[this._v("main")]),this._v(" 中调用 "),s("code",[this._v("instrument::clarinet")]),this._v("，而不是如示例 7-16 所示的有相同行为的代码：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("clarinet"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-16: 通过 "),s("code",[this._v("use")]),this._v(" 将 "),s("code",[this._v("clarinet")]),this._v(" 函数引入作用域，这是不推荐的")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于函数来说，通过 "),s("code",[this._v("use")]),this._v(" 指定函数的父模块接着指定父模块来调用方法被认为是习惯用法。这么做而不是像示例 7-16 那样通过 "),s("code",[this._v("use")]),this._v(" 指定函数的路径，清楚的表明了函数不是本地定义的，同时仍最小化了指定全路径时的重复。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("对于结构体、枚举和其它项，通过 "),s("code",[this._v("use")]),this._v(" 指定项的全路径是习惯用法。例如，示例 7-17 展示了将标准库中 "),s("code",[this._v("HashMap")]),this._v(" 结构体引入作用域的习惯用法。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("collections"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("HashMap"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" map "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" HashMap"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("insert")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-17: 将 "),s("code",[this._v("HashMap")]),this._v(" 引入作用域的习惯用法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("相反，示例 7-18 中的代码将 "),s("code",[this._v("HashMap")]),this._v(" 的父模块引入作用域不被认为是习惯用法。这个习惯并没有很强制的理由；这是慢慢形成的习惯同时人们习惯于这么读写。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("collections"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" map "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" collections"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("HashMap"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("insert")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-18: 将 "),s("code",[this._v("HashMap")]),this._v(" 引入作用域的非习惯方法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这个习惯的一个例外是如果 "),s("code",[this._v("use")]),this._v(" 语句会将两个同名的项引入作用域时，这是不允许的。示例 7-19 展示了如何将两个不同父模块的 "),s("code",[this._v("Result")]),this._v(" 类型引入作用域并引用它们。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("fmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("function1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" fmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Result "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("Ok")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("function2")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Result"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("Ok")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-19: 将两个同名类型引入作用域必须使用父模块")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("因为如果我们指定 "),n("code",[t._v("use std::fmt::Result")]),t._v(" 和 "),n("code",[t._v("use std::io::Result")]),t._v("，则作用域中会有两个 "),n("code",[t._v("Result")]),t._v(" 类型，Rust 无法知道我们想用哪个 "),n("code",[t._v("Result")]),t._v("。尝试这么做并看看编译器错误！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"通过-as-关键字重命名引入作用域的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-as-关键字重命名引入作用域的类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 通过 "),s("code",[this._v("as")]),this._v(" 关键字重命名引入作用域的类型")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("将两个同名类型引入同一作用域这个问题还有另一个解决办法：可以通过在 "),n("code",[t._v("use")]),t._v(" 后加上 "),n("code",[t._v("as")]),t._v(" 和一个新名称来为此类型指定一个新的本地名称。示例 7-20 展示了另一个编写示例 7-19 中代码的方法，通过 "),n("code",[t._v("as")]),t._v(" 重命名了其中一个 "),n("code",[t._v("Result")]),t._v(" 类型。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("fmt"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Result"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Result "),n("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" IoResult"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("function1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Result "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("Ok")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("function2")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" IoResult"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("Ok")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-20: 通过 "),s("code",[this._v("as")]),this._v(" 关键字重命名引入作用域的类型")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在第二个 "),n("code",[t._v("use")]),t._v(" 语句中，我们选择 "),n("code",[t._v("IoResult")]),t._v(" 作为 "),n("code",[t._v("std::io::Result")]),t._v(" 的新名称，它与从 "),n("code",[t._v("std::fmt")]),t._v(" 引入作用域的 "),n("code",[t._v("Result")]),t._v(" 并不冲突。这样做也被认为是惯用的；示例 7-19 还是示例 7-20 全看你的选择。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"通过-pub-use-重导出名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-pub-use-重导出名称","aria-hidden":"true"}},[this._v("#")]),this._v(" 通过 "),s("code",[this._v("pub use")]),this._v(" 重导出名称")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("当使用 "),n("code",[t._v("use")]),t._v(" 关键字将名称导入作用域时，在新作用域中可用的名称是私有的。如果希望调用你编写的代码的代码能够像你一样在其自己的作用域内引用这些类型，可以结合 "),n("code",[t._v("pub")]),t._v(" 和 "),n("code",[t._v("use")]),t._v("。这个技术被称为 “重导出”（"),n("em",[t._v("re-exporting")]),t._v("），因为这样做将项引入作用域并同时使其可供其他代码引入自己的作用域。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("例如，示例 7-21 展示了示例 7-15 中的代码将 "),s("code",[this._v("performance_group")]),this._v(" 的 "),s("code",[this._v("use")]),this._v(" 变为 "),s("code",[this._v("pub use")]),this._v(" 的版本。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sound "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" performance_group "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sound"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet_trio")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    performance_group"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet_trio")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    performance_group"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instrument"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-21: 通过 "),s("code",[this._v("pub use")]),this._v(" 使名称可引入任何代码的作用域中")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("通过 "),n("code",[t._v("pub use")]),t._v("，现在 "),n("code",[t._v("main")]),t._v(" 函数可以通过新路径 "),n("code",[t._v("performance_group::instrument::clarinet")]),t._v(" 来调用 "),n("code",[t._v("clarinet")]),t._v(" 函数。如果没有指定 "),n("code",[t._v("pub use")]),t._v("，"),n("code",[t._v("clarinet_trio")]),t._v(" 函数可以在其作用域中调用 "),n("code",[t._v("instrument::clarinet")]),t._v(" 但 "),n("code",[t._v("main")]),t._v(" 则不允许使用这个新路径。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用外部包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用外部包","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用外部包")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在第二章中我们编写了一个猜猜看游戏。那个项目使用了一个外部包，"),s("code",[this._v("rand")]),this._v("，来生成随机数。为了在项目中使用 "),s("code",[this._v("rand")]),this._v("，在 "),s("em",[this._v("Cargo.toml")]),this._v(" 中加入了如下行：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: Cargo.toml")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('[dependencies]\nrand = "0.5.5"\n')])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("在 "),n("em",[t._v("Cargo.toml")]),t._v(" 中加入 "),n("code",[t._v("rand")]),t._v(" 依赖告诉了 Cargo 要从 "),n("em",[t._v("https://crates.io")]),t._v(" 下载 "),n("code",[t._v("rand")]),t._v(" 和其依赖，并使其可在项目代码中使用。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("接着，为了将 "),n("code",[t._v("rand")]),t._v(" 定义引入项目包的作用域，加入一行 "),n("code",[t._v("use")]),t._v("，它以 "),n("code",[t._v("rand")]),t._v(" 包名开头并列出了需要引入作用域的项。回忆一下第二章的 “生成一个随机数” 部分，我们曾将 "),n("code",[t._v("Rng")]),t._v(" trait 引入作用域并调用了 "),n("code",[t._v("rand::thread_rng")]),t._v(" 函数：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("use rand::Rng;\n\nfn main() {\n    let secret_number = rand::thread_rng().gen_range(1, 101);\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("em",[this._v("https://crates.io")]),this._v(" 上有很多社区成员发布的包，将其引入你自己的项目涉及到相同的步骤：在 "),s("em",[this._v("Cargo.toml")]),this._v(" 列出它们并通过 "),s("code",[this._v("use")]),this._v(" 将其中定义的项引入项目包的作用域中。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("注意标准库（"),n("code",[t._v("std")]),t._v("）对于你的包来说也是外部 crate。因为标准库随 Rust 语言一同分发，无需修改 "),n("em",[t._v("Cargo.toml")]),t._v(" 来引入 "),n("code",[t._v("std")]),t._v("，不过需要通过 "),n("code",[t._v("use")]),t._v(" 将标准库中定义的项引入项目包的作用域中来引用它们，比如 "),n("code",[t._v("HashMap")]),t._v("：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("collections"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("HashMap"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这是一个以标注库 crate 名 "),s("code",[this._v("std")]),this._v(" 开头的绝对路径。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"嵌套路径来消除大量的-use-行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套路径来消除大量的-use-行","aria-hidden":"true"}},[this._v("#")]),this._v(" 嵌套路径来消除大量的 "),s("code",[this._v("use")]),this._v(" 行")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当需要引入很多定义于相同包或相同模块的项时，为每一项单独列出一行会占用源码很大的空间。例如猜猜看章节示例 2-4 中有两行 "),s("code",[this._v("use")]),this._v(" 语句都从 "),s("code",[this._v("std")]),this._v(" 引入项到作用域：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("cmp"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Ordering"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// ---snip---")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cmp"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Ordering"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("// ---snip---")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-22: 指定嵌套的路径在一行中将多个带有相同前缀的项引入作用域")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在从相同包或模块中引入很多项的程序中，使用嵌套路径显著减少所需的单独 "),s("code",[this._v("use")]),this._v(" 语句！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("也可以剔除掉完全包含在另一个路径中的路径。例如，示例 7-23 中展示了两个 "),s("code",[this._v("use")]),this._v(" 语句：一个将 "),s("code",[this._v("std::io")]),this._v(" 引入作用域，另一个将 "),s("code",[this._v("std::io::Write")]),this._v(" 引入作用域：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Write"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-23: 通过两行 "),s("code",[this._v("use")]),this._v(" 语句引入两个路径，其中一个是另一个的子路径")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("两个路径的相同部分是 "),s("code",[this._v("std::io")]),this._v("，这正是第一个路径。为了在一行 "),s("code",[this._v("use")]),this._v(" 语句中引入这两个路径，可以在嵌套路径中使用 "),s("code",[this._v("self")]),this._v("，如示例 7-24 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/lib.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Write"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-24: 将示例 7-23 中部分重复的路径合并为一个 "),s("code",[this._v("use")]),this._v(" 语句")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这将 "),s("code",[this._v("std::io")]),this._v(" 和 "),s("code",[this._v("std::io::Write")]),this._v(" 同时引入作用域。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"通过-glob-运算符将所有的公有定义引入作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-glob-运算符将所有的公有定义引入作用域","aria-hidden":"true"}},[this._v("#")]),this._v(" 通过 glob 运算符将所有的公有定义引入作用域")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果希望将一个路径下 "),s("strong",[this._v("所有")]),this._v(" 公有项引入作用域，可以指定路径后跟 "),s("code",[this._v("*")]),this._v("，glob 运算符：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("collections"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token operator"}},[t._v("*")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这个 "),s("code",[this._v("use")]),this._v(" 语句将 "),s("code",[this._v("std::collections")]),this._v(" 中定义的所有公有项引入当前作用域。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"将模块分割进不同文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将模块分割进不同文件","aria-hidden":"true"}},[this._v("#")]),this._v(" 将模块分割进不同文件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("例如从示例 7-8 的代码开始，我们可以通过修改 crate 根文件（这里是 "),s("em",[this._v("src/main.rs")]),this._v("）将 "),s("code",[this._v("sound")]),this._v(" 模块移动到其自己的文件 "),s("em",[this._v("src/sound.rs")]),this._v(" 中，如示例 7-25 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("mod sound;\n\nfn main() {\n    // 绝对路径\n    crate::sound::instrument::clarinet();\n\n    // 相对路径\n    sound::instrument::clarinet();\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-25: 声明 "),s("code",[this._v("sound")]),this._v(" 模块，其内容位于 "),s("em",[this._v("src/sound.rs")]),this._v(" 文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("而 "),s("em",[this._v("src/sound.rs")]),this._v(" 中会包含 "),s("code",[this._v("sound")]),this._v(" 模块的内容，如示例 7-26 所示。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/sound.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" instrument "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 7-26: "),s("code",[this._v("sound")]),this._v(" 模块中的定义位于 "),s("em",[this._v("src/sound.rs")]),this._v(" 中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 "),s("code",[this._v("mod sound")]),this._v(" 后使用分号而不是代码块告诉 Rust 在另一个与模块同名的文件中加载模块的内容。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("继续重构我们例子，将 "),s("code",[this._v("instrument")]),this._v(" 模块也提取到其自己的文件中，修改 "),s("em",[this._v("src/sound.rs")]),this._v(" 只包含 "),s("code",[this._v("instrument")]),this._v(" 模块的声明：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/sound.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[this._v("pub")]),this._v(" "),s("span",{attrs:{class:"token keyword"}},[this._v("mod")]),this._v(" instrument"),s("span",{attrs:{class:"token punctuation"}},[this._v(";")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接着创建 "),s("em",[this._v("src/sound")]),this._v(" 目录和 "),s("em",[this._v("src/sound/instrument.rs")]),this._v(" 文件来包含 "),s("code",[this._v("instrument")]),this._v(" 模块的定义：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/sound/instrument.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("clarinet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("模块树依然保持相同，"),s("code",[this._v("main")]),this._v(" 中的函数调用也无需修改继续保持有效，即使其定义存在于不同的文件中。这样随着代码增长可以将模块移动到新文件中。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Rust 提供了将包组织进 crate、将 crate 组织进模块和通过指定绝对或相对路径从一个模块引用另一个模块中定义的项的方式。可以通过 "),s("code",[this._v("use")]),this._v(" 语句将路径引入作用域，这样在多次使用时可以使用更短的路径。模块定义的代码默认时私有的，不过可以选择增加 "),s("code",[this._v("pub")]),this._v(" 关键字使其定义变为公有。")])}],!1,null,null,null);e.options.__file="ch07-02-modules-and-use-to-control-scope-and-privacy.md";s.default=e.exports}}]);