(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{252:function(t,e,s){"use strict";s.r(e);var r=s(0),c=Object(r.a)({},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[this._m(0),this._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch05-00-structs.md",target:"_blank",rel:"noopener noreferrer"}},[this._v("ch05-00-structs.md"),e("OutboundLink")],1),this._v(" "),e("br"),this._v("\ncommit 1fedfc4b96c2017f64ecfcf41a0a07e2e815f24f")])]),this._v(" "),this._m(1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"使用结构体组织相关联的数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用结构体组织相关联的数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用结构体组织相关联的数据")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("em",[t._v("struct")]),t._v("，或者 "),s("em",[t._v("structure")]),t._v("，是一个自定义数据类型，允许你命名和包装多个相关的值，从而形成一个有意义的组合。如果你熟悉一门面向对象语言，"),s("em",[t._v("struct")]),t._v(" 就像对象中的数据属性。在本章中，我们会对比元组与结构体的异同，演示结构体的用法，并讨论如何在结构体上定义方法和关联函数来指定与结构体数据相关的行为。你在程序中基于结构体和枚举（"),s("em",[t._v("enum")]),t._v("）（在第六章介绍）创建新类型，以充分利用 Rust 的编译时类型检查。")])}],!1,null,null,null);c.options.__file="ch05-00-structs.md";e.default=c.exports}}]);