(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{272:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/second-edition/src/appendix-06-newest-features.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("appendix-06-newest-features.md"),a("OutboundLink")],1),t._v(" "),a("br"),t._v("\ncommit b64de01431cdf1020ad3358d2f83e46af68a39ed")])]),t._v(" "),a("p",[t._v("自从本书的主要部分完成之后，该附录文档中的特性已经加到 Rust 的稳定版中。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),a("p",[t._v("如果有一个包含许多不同子模块的复杂模块树，然后需要从每个子模块中引入几个特性，那么将所有导入模块放在同一声明中来保持代码清洁同时避免根模块名重复将会非常有用。")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),a("p",[t._v("Rust 1.26.0 添加了 128 字节的整数基本类型：")]),t._v(" "),t._m(15),t._v(" "),a("p",[t._v("这俩基本类型由 LLVM 支持高效地实现。即使在不支持 128 字节整数的平台上，它们都是可用的，且可像其他整数类型那样使用。")]),t._v(" "),a("p",[t._v("这俩基本类型在那些需要高效使用大整数的算法中非常有用，如某些加密算法。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"f-最新功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#f-最新功能","aria-hidden":"true"}},[this._v("#")]),this._v(" F - 最新功能")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"字段初始化缩写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段初始化缩写","aria-hidden":"true"}},[this._v("#")]),this._v(" 字段初始化缩写")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以通过具名字段来初始化一个数据结构（结构体、枚举、联合体），如将 "),s("code",[this._v("fieldname: fieldname")]),this._v(" 缩写为 "),s("code",[this._v("fieldname")]),this._v(" 。这可以以更少的重复代码来完成一个复杂的初始化语法。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Debug)]")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Person "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u8"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token function"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Peter"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("27")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// Using full syntax:")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" peter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" age "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token function"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Portia"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("27")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// Using field init shorthand:")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" portia "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Person "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"{:?}"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" portia"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"从循环中返回（-loop-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从循环中返回（-loop-）","aria-hidden":"true"}},[this._v("#")]),this._v(" 从循环中返回（ loop ）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("loop")]),this._v(" 的用法之一是重试一个可以操作，比如检查线程是否完成其任务。然而可能需要将该操作的结果传到其他部分代码。如果加上 "),s("code",[this._v("break")]),this._v(" 表达式来停止循环，则会从循环中断中返回：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" counter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        counter "),a("span",{attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" counter "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),t._v(" counter "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("assert_eq!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("20")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"use-声明中的内置组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-声明中的内置组","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("use")]),this._v(" 声明中的内置组")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("use")]),t._v(" 声明所支持的嵌套在这些情况下对你有帮助：简单的导入和全局导入。例如，下面的代码片段导入了 "),a("code",[t._v("bar")]),t._v(" 、 "),a("code",[t._v("Foo")]),t._v(" 、 "),a("code",[t._v("baz")]),t._v(" 中所有项和 "),a("code",[t._v("Bar")]),t._v(" ：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[t._v("# "),a("span",{attrs:{class:"token attribute attr-name"}},[t._v("#![allow(unused_imports, dead_code)]")]),t._v("\n#\n# "),a("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" foo "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" bar "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#         "),a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Foo "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#     "),a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" baz "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#         "),a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" quux "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#             "),a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Bar "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#         "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#     "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),a("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" foo"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bar"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token keyword"}},[t._v("self")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Foo"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    baz"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quux"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Bar"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n# "),a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"范围包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围包含","aria-hidden":"true"}},[this._v("#")]),this._v(" 范围包含")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("先前，当在表达式中使用范围（ "),a("code",[t._v("..")]),t._v(" 或 "),a("code",[t._v("...")]),t._v(" ）时，其必须使用排除上界的 "),a("code",[t._v("..")]),t._v(" ，而在模式中，则要使用包含上界的 "),a("code",[t._v("...")]),t._v(" 。而现在，"),a("code",[t._v("..=")]),t._v(" 可作为语法用于表达式或范围上下文件中的包含范围中。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("match")]),t._v(" i "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"{}: low"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"{}: high"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            _ "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"{}: out of range"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("...")]),this._v(" 语法也可用在匹配语法中，但不能用于表达式中，而 "),s("code",[this._v("..=")]),this._v(" 则二者皆可。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_128-字节的整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_128-字节的整数","aria-hidden":"true"}},[this._v("#")]),this._v(" 128 字节的整数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("u128")]),this._v(": 一个在 [0, 2^128 - 1] 范围内的 128 字节的无符号整数")]),this._v(" "),s("li",[s("code",[this._v("i128")]),this._v(": 一个在 [-(2^127), 2^127 - 1] 范围内的有符号整数")])])}],!1,null,null,null);e.options.__file="appendix-06-newest-features.md";s.default=e.exports}}]);