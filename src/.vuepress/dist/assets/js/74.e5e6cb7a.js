(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{196:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/second-edition/src/ch14-03-cargo-workspaces.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch14-03-cargo-workspaces.md"),a("OutboundLink")],1),t._v(" "),a("br"),t._v("\ncommit a59537604248f2970e0831d5ead9f6fac2cdef84")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),a("p",[t._v("工作空间中的 crate 不必相互依赖，所以仍需显式地表明工作空间中 crate 的依赖关系。")]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._m(48),t._v(" "),t._m(49),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),a("p",[t._v("随着项目增长，考虑使用工作空间：每一个更小的组件比一大块代码要容易理解。将 crate 保持在工作空间中更易于协调他们的改变，如果他们一起运行并经常需要同时被修改的话。")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"cargo-工作空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cargo-工作空间","aria-hidden":"true"}},[this._v("#")]),this._v(" Cargo 工作空间")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第十二章中，我们构建一个包含二进制 crate 和库 crate 的包。你可能会发现，随着项目开发的深入，库 crate 持续增大，而你希望将其进一步拆分成多个库 crate。对于这种情况，Cargo 提供了一个叫 "),e("strong",[this._v("工作空间")]),this._v("（"),e("em",[this._v("workspaces")]),this._v("）的功能，它可以帮助我们管理多个相关的协同开发的包。")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[a("strong",[t._v("工作空间")]),t._v(" 是一系列共享同样的 "),a("em",[t._v("Cargo.lock")]),t._v(" 和输出目录的包。让我们使用工作空间创建一个项目，这里采用常见的代码这样就可以关注工作空间的结构了。有多种组织工作空间的方式；我们将展示一个常用方法。我们的工作空间有一个二进制项目和两个库。二进制项目会提供作为命令行工具的主要功能，它会依赖另两个库。一个库会提供 "),a("code",[t._v("add_one")]),t._v(" 方法而第二个会提供 "),a("code",[t._v("add_two")]),t._v(" 方法。这三个 crate 将会是相同工作空间的一部分。让我们以新建工作空间目录开始：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ mkdir add\n$ cd add\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("在 add* 目录中，创建 "),a("em",[t._v("Cargo.toml")]),t._v(" 文件。这个 "),a("em",[t._v("Cargo.toml")]),t._v(" 文件配置了整个工作空间。它不会包含 "),a("code",[t._v("[package]")]),t._v(" 或其他我们在 "),a("em",[t._v("Cargo.toml")]),t._v(" 中见过的元信息。相反，它以 "),a("code",[t._v("[workspace]")]),t._v(" 部分作为开始，并通过指定 "),a("em",[t._v("adder")]),t._v(" 的路径来为工作空间增加成员，如下会加入二进制 crate：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: Cargo.toml")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[workspace]\n\nmembers = [\n    "adder",\n]\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("接下来，在 "),e("em",[this._v("add")]),this._v(" 目录运行 "),e("code",[this._v("cargo new")]),this._v(" 新建 "),e("code",[this._v("adder")]),this._v(" 二进制 crate：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo new --bin adder\n     Created binary (application) `adder` project\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("到此为止，可以运行 "),e("code",[this._v("cargo build")]),this._v(" 来构建工作空间。"),e("em",[this._v("add")]),this._v(" 目录中的文件应该看起来像这样：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("├── Cargo.lock\n├── Cargo.toml\n├── adder\n│   ├── Cargo.toml\n│   └── src\n│       └── main.rs\n└── target\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("工作空间在顶级目录有一个 "),a("em",[t._v("target")]),t._v(" 目录；"),a("code",[t._v("adder")]),t._v(" 并没有自己的 "),a("em",[t._v("target")]),t._v(" 目录。即使进入 "),a("em",[t._v("adder")]),t._v(" 目录运行 "),a("code",[t._v("cargo build")]),t._v("，构建结果也位于 "),a("em",[t._v("add/target")]),t._v(" 而不是 "),a("em",[t._v("add/adder/target")]),t._v("。工作空间中的 crate 之间相互依赖。如果每个 crate 有其自己的 "),a("em",[t._v("target")]),t._v(" 目录，为了在自己的 "),a("em",[t._v("target")]),t._v(" 目录中生成构建结果，工作空间中的每一个 crate 都不得不相互重新编译其他 crate。通过共享一个 "),a("em",[t._v("target")]),t._v(" 目录，工作空间可以避免其他 crate 多余的重复构建。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"在工作空间中创建第二个-crate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在工作空间中创建第二个-crate","aria-hidden":"true"}},[this._v("#")]),this._v(" 在工作空间中创建第二个 crate")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("接下来，让我们在工作空间中指定另一个成员 crate。这个 crate 位于 "),e("em",[this._v("add-one")]),this._v(" 目录中，所以修改顶级 "),e("em",[this._v("Cargo.toml")]),this._v(" 为也包含 "),e("em",[this._v("add-one")]),this._v(" 路径：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: Cargo.toml")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[workspace]\n\nmembers = [\n    "adder",\n    "add-one",\n]\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("接着新生成一个叫做 "),e("code",[this._v("add-one")]),this._v(" 的库：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo new add-one\n     Created library `add-one` project\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在 "),e("em",[this._v("add")]),this._v(" 目录应该有如下目录和文件：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("├── Cargo.lock\n├── Cargo.toml\n├── add-one\n│   ├── Cargo.toml\n│   └── src\n│       └── lib.rs\n├── adder\n│   ├── Cargo.toml\n│   └── src\n│       └── main.rs\n└── target\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在 "),e("em",[this._v("add-one/src/lib.rs")]),this._v(" 文件中，增加一个 "),e("code",[this._v("add_one")]),this._v(" 函数：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: add-one/src/lib.rs")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("add_one")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" i32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" i32 "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("现在工作空间中有了一个库 crate，让 "),a("code",[t._v("adder")]),t._v(" 依赖库 crate "),a("code",[t._v("add-one")]),t._v("。首先需要在 "),a("em",[t._v("adder/Cargo.toml")]),t._v(" 文件中增加 "),a("code",[t._v("add-one")]),t._v(" 作为路径依赖：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: adder/Cargo.toml")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[dependencies]\n\nadd-one = { path = "../add-one" }\n')])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("接下来，在 "),a("code",[t._v("adder")]),t._v(" crate 中使用 "),a("code",[t._v("add-one")]),t._v(" crate 的函数 "),a("code",[t._v("add_one")]),t._v("。打开 "),a("em",[t._v("adder/src/main.rs")]),t._v(" 在顶部增加一行 "),a("code",[t._v("extern crate")]),t._v(" 将新 "),a("code",[t._v("add-one")]),t._v(" 库 crate 引入作用域。接着修改 "),a("code",[t._v("main")]),t._v(" 函数来调用 "),a("code",[t._v("add_one")]),t._v(" 函数，如示例 14-7 所示：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: adder/src/main.rs")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-rust,ignore extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('extern crate add_one;\n\nfn main() {\n    let num = 10;\n    println!("Hello, world! {} plus one is {}!", num, add_one::add_one(num));\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"caption"},[this._v("示例 14-7：在 "),e("code",[this._v("adder")]),this._v(" crate 中使用 "),e("code",[this._v("add-one")]),this._v(" 库 crate")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在 "),e("em",[this._v("add")]),this._v(" 目录中运行 "),e("code",[this._v("cargo build")]),this._v(" 来构建工作空间！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo build\n   Compiling add-one v0.1.0 (file:///projects/add/add-one)\n   Compiling adder v0.1.0 (file:///projects/add/adder)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.68 secs\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("为了在顶层 "),e("em",[this._v("add")]),this._v(" 目录运行二进制 crate，需要通过 "),e("code",[this._v("-p")]),this._v(" 参数和包名称来运行 "),e("code",[this._v("cargo run")]),this._v(" 指定工作空间中我们希望使用的包：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo run -p adder\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running `target/debug/adder`\nHello, world! 10 plus one is 11!\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这会运行 "),e("em",[this._v("adder/src/main.rs")]),this._v(" 中的代码，其依赖 "),e("code",[this._v("add-one")]),this._v(" crate")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"在工作空间中依赖外部-crate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在工作空间中依赖外部-crate","aria-hidden":"true"}},[this._v("#")]),this._v(" 在工作空间中依赖外部 crate")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("还需注意的是工作空间只在根目录有一个 "),a("em",[t._v("Cargo.lock")]),t._v("，而不是在每一个 crate 目录都有 "),a("em",[t._v("Cargo.lock")]),t._v("。这确保了所有的 crate 都使用完全相同版本的依赖。如果在 "),a("em",[t._v("Cargo.toml")]),t._v(" 和 "),a("em",[t._v("add-one/Cargo.toml")]),t._v(" 中都增加 "),a("code",[t._v("rand")]),t._v(" crate，则 Cargo 会将其都解析为同一版本并记录到唯一的 "),a("em",[t._v("Cargo.lock")]),t._v(" 中。使得工作空间中的所有 crate 都使用相同的依赖意味着其中的 crate 都是相互兼容的。让我们在 "),a("em",[t._v("add-one/Cargo.toml")]),t._v(" 中的 "),a("code",[t._v("[dependencies]")]),t._v(" 部分增加 "),a("code",[t._v("rand")]),t._v(" crate 以便能够在 "),a("code",[t._v("add-one")]),t._v(" crate 中使用 "),a("code",[t._v("rand")]),t._v(" crate：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: add-one/Cargo.toml")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-toml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[dependencies]\n\nrand = "0.3.14"\n')])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("现在就可以在 "),a("em",[t._v("add-one/src/lib.rs")]),t._v(" 中增加 "),a("code",[t._v("extern crate rand;")]),t._v(" 了，接着在 "),a("em",[t._v("add")]),t._v(" 目录运行 "),a("code",[t._v("cargo build")]),t._v(" 构建整个工作空间就会引入并编译 "),a("code",[t._v("rand")]),t._v(" crate：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo build\n    Updating registry `https://github.com/rust-lang/crates.io-index`\n Downloading rand v0.3.14\n   --snip--\n   Compiling rand v0.3.14\n   Compiling add-one v0.1.0 (file:///projects/add/add-one)\n   Compiling adder v0.1.0 (file:///projects/add/adder)\n    Finished dev [unoptimized + debuginfo] target(s) in 10.18 secs\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("现在顶级的 "),a("em",[t._v("Cargo.lock")]),t._v(" 包含了 "),a("code",[t._v("add-one")]),t._v(" 的 "),a("code",[t._v("rand")]),t._v(" 依赖的信息。然而，即使 "),a("code",[t._v("rand")]),t._v(" 被用于工作空间的某处，也不能在其他 crate 中使用它，除非也在他们的 "),a("em",[t._v("Cargo.toml")]),t._v(" 中加入 "),a("code",[t._v("rand")]),t._v("。例如，如果在顶级的 "),a("code",[t._v("adder")]),t._v(" crate 的 "),a("em",[t._v("adder/src/main.rs")]),t._v(" 中增加 "),a("code",[t._v("extern crate rand;")]),t._v("，会得到一个错误：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo build\n   Compiling adder v0.1.0 (file:///projects/add/adder)\nerror: use of unstable library feature 'rand': use `rand` from crates.io (see\nissue #27703)\n --\x3e adder/src/main.rs:1:1\n  |\n1 | extern crate rand;\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("为了修复这个错误，修改顶级 "),a("code",[t._v("adder")]),t._v(" crate 的 "),a("em",[t._v("Cargo.toml")]),t._v(" 来表明 "),a("code",[t._v("rand")]),t._v(" 也是这个 crate 的依赖。构建 "),a("code",[t._v("adder")]),t._v(" crate 会将 "),a("code",[t._v("rand")]),t._v(" 加入到 "),a("em",[t._v("Cargo.lock")]),t._v(" 中 "),a("code",[t._v("adder")]),t._v(" 的依赖列表中，但是这并不会下载 "),a("code",[t._v("rand")]),t._v(" 的额外拷贝。Cargo 确保了工作空间中任何使用 "),a("code",[t._v("rand")]),t._v(" 的 crate 都采用相同的版本。在整个工作空间中使用相同版本的 "),a("code",[t._v("rand")]),t._v(" 节省了空间，因为这样就无需多个拷贝并确保了工作空间中的 crate 将是相互兼容的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"为工作空间增加测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为工作空间增加测试","aria-hidden":"true"}},[this._v("#")]),this._v(" 为工作空间增加测试")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("作为另一个提升，让我们为 "),e("code",[this._v("add_one")]),this._v(" crate 中的 "),e("code",[this._v("add_one::add_one")]),this._v(" 函数增加一个测试：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("span",{staticClass:"filename"},[this._v("文件名: add-one/src/lib.rs")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("add_one")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" i32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" i32 "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("it_works")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("assert_eq!")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("add_one")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在顶级 "),e("em",[this._v("add")]),this._v(" 目录运行 "),e("code",[this._v("cargo test")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo test\n   Compiling add-one v0.1.0 (file:///projects/add/add-one)\n   Compiling adder v0.1.0 (file:///projects/add/adder)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.27 secs\n     Running target/debug/deps/add_one-f0253159197f7841\n\nrunning 1 test\ntest tests::it_works ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n\n     Running target/debug/deps/adder-f88af9d2cc175a5e\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n\n   Doc-tests add-one\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("输出的第一部分显示 "),a("code",[t._v("add-one")]),t._v(" crate 的 "),a("code",[t._v("it_works")]),t._v(" 测试通过了。下一个部分显示 "),a("code",[t._v("adder")]),t._v(" crate 中找到了 0 个测试，最后一部分显示 "),a("code",[t._v("add-one")]),t._v(" crate 中有 0 个文档测试。在像这样的工作空间结构中运行 "),a("code",[t._v("cargo test")]),t._v(" 会运行工作空间中所有 crate 的测试。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("也可以选择运行工作空间中特定 crate 的测试，通过在根目录使用 "),e("code",[this._v("-p")]),this._v(" 参数并指定希望测试的 crate 名称：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ cargo test -p add-one\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\n     Running target/debug/deps/add_one-b3235fea9a156f74\n\nrunning 1 test\ntest tests::it_works ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n\n   Doc-tests add-one\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("输出显示了 "),e("code",[this._v("cargo test")]),this._v(" 只运行了 "),e("code",[this._v("add-one")]),this._v(" crate 的测试而没有运行 "),e("code",[this._v("adder")]),this._v(" crate 的测试。")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("p",[t._v("如果你选择向 "),a("em",[t._v("https://crates.io/")]),t._v(" 发布工作空间中的 crate，每一个工作空间中的 crate 将会单独发布。"),a("code",[t._v("cargo publish")]),t._v(" 命令并没有 "),a("code",[t._v("--all")]),t._v(" 或者 "),a("code",[t._v("-p")]),t._v(" 参数，所以必须进入每一个 crate 的目录并运行 "),a("code",[t._v("cargo publish")]),t._v(" 来发布工作空间中的每一个 crate。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在尝试以类似 "),e("code",[this._v("add-one")]),this._v(" crate 的方式向工作空间增加 "),e("code",[this._v("add-two")]),this._v(" crate 来作为更多的练习！")])}],!1,null,null,null);n.options.__file="ch14-03-cargo-workspaces.md";e.default=n.exports}}]);