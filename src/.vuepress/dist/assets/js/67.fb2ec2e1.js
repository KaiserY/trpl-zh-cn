(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{203:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://github.com/rust-lang/book/blob/master/src/ch13-01-closures.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ch13-01-closures.md"),n("OutboundLink")],1),t._v(" "),n("br"),t._v("\ncommit 1fedfc4b96c2017f64ecfcf41a0a07e2e815f24f")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("让我们来看一个存储稍后要执行的闭包的示例。其间我们会讨论闭包的语法、类型推断和 trait。")]),t._v(" "),n("p",[t._v("考虑一下这个假想的情况：我们在一个通过 app 生成自定义健身计划的初创企业工作。其后端使用 Rust 编写，而生成健身计划的算法需要考虑很多不同的因素，比如用户的年龄、身体质量指数（Body Mass Index）、用户喜好、最近的健身活动和用户指定的强度系数。本例中实际的算法并不重要，重要的是这个计算只花费几秒钟。我们只希望在需要时调用算法，并且只希望调用一次，这样就不会让用户等得太久。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("所需的输入有这些：")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("如果用户需要高强度锻炼，这里有一些额外的逻辑：如果 app 生成的随机数刚好是 3，app 相反会建议用户稍做休息并补充水分。如果不是，则用户会从复杂算法中得到数分钟跑步的高强度锻炼计划。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._m(40),t._v(" "),n("p",[t._v("现在耗时的计算只在一个地方被调用，并只会在需要结果的时候执行改代码。")]),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),n("p",[t._v("闭包通常很短并只与对应相对任意的场景较小的上下文中。在这些有限制的上下文中，编译器能可靠的推断参数和返回值的类型，类似于它是如何能够推断大部分变量的类型一样。")]),t._v(" "),n("p",[t._v("强制在这些小的匿名函数中注明类型是很恼人的，并且与编译器已知的信息存在大量的重复。")]),t._v(" "),n("p",[t._v("类似于变量，如果相比严格的必要性你更希望增加明确性并变得更啰嗦，可以选择增加类型注解；为示例 13-5 中定义的闭包标注类型将看起来像示例 13-7 中的定义：")]),t._v(" "),t._m(44),t._v(" "),t._m(45),t._m(46),t._v(" "),n("p",[t._v("有了类型注解闭包的语法就更类似函数了。如下是一个对其参数加一的函数的定义与拥有相同行为闭包语法的纵向对比。这里增加了一些空格来对齐相应部分。这展示了闭包语法如何类似于函数语法，除了使用竖线而不是括号以及几个可选的语法之外：")]),t._v(" "),t._m(47),n("p",[t._v("第一行展示了一个函数定义，而第二行展示了一个完整标注的闭包定义。第三行闭包定义中省略了类型注解，而第四行去掉了可选的大括号，因为闭包体只有一行。这些都是有效的闭包定义，并在调用时产生相同的行为。")]),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),n("p",[t._v("编译器给出如下错误：")]),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),n("p",[t._v("回到我们的健身计划生成 app ，在示例 13-6 中的代码仍然调用了多于需要的慢计算闭包。解决这个问题的一个方法是在全部代码中的每一个需要多个慢计算闭包结果的地方，可以将结果保存进变量以供复用，这样就可以使用变量而不是再次调用闭包。但是这样就会有很多重复的保存结果变量的地方。")]),t._v(" "),t._m(55),t._v(" "),n("p",[t._v("为了让结构体存放闭包，我们需要能够指定闭包的类型，因为结构体定义需要知道其每一个字段的类型。每一个闭包实例有其自己独有的匿名类型：也就是说，即便两个闭包有着相同的签名，他们的类型仍然可以被认为是不同。为了定义使用闭包的结构体、枚举或函数参数，需要像第十章讨论的那样使用泛型和 trait bound。")]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._m(86),t._v(" "),t._m(87),t._v(" "),t._m(88),t._v(" "),t._m(89),t._v(" "),n("p",[t._v("在健身计划生成器的例子中，我们只将闭包作为内联匿名函数来使用。不过闭包还有另一个函数所没有的功能：他们可以捕获其环境并访问其被定义的作用域的变量。")]),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._m(93),t._v(" "),t._m(94),t._v(" "),n("p",[t._v("函数则不能做到同样的事，如果尝试如下例子，它并不能编译：")]),t._v(" "),t._m(95),t._v(" "),t._m(96),n("p",[t._v("这会得到一个错误：")]),t._v(" "),t._m(97),n("p",[t._v("编译器甚至会提示我们这只能用于闭包！")]),t._v(" "),n("p",[t._v("当闭包从环境中捕获一个值，闭包会在闭包体中储存这个值以供使用。这会使用内存并产生额外的开销，当执行不会捕获环境的更通用的代码场景中我们不希望有这些开销。因为函数从未允许捕获环境，定义和使用函数也就从不会有这些额外开销。")]),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._v(" "),t._m(104),n("p",[t._v("这个例子并不能编译：")]),t._v(" "),t._m(105),t._m(106),t._v(" "),t._m(107),t._v(" "),n("p",[t._v("为了展示闭包作为函数参数时捕获其环境的作用，让我们移动到下一个主题：迭代器。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"闭包：可以捕获环境的匿名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包：可以捕获环境的匿名函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 闭包：可以捕获环境的匿名函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Rust 的 "),s("strong",[this._v("闭包")]),this._v("（"),s("em",[this._v("closures")]),this._v("）是可以保存进变量或作为参数传递给其他函数的匿名函数。可以在一个地方创建闭包，然后在不同的上下文中执行闭包运算。不同于函数，闭包允许捕获调用者作用域中的值。我们将展示闭包的这些功能如何复用代码和自定义行为。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用闭包创建行为的抽象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用闭包创建行为的抽象","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用闭包创建行为的抽象")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这里将通过调用 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数来模拟调用假象的算法，如示例 13-1 所示，它会打印出 "),s("code",[this._v("calculating slowly...")]),this._v("，等待两秒，并接着返回传递给它的数字：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    intensity\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-1：一个用来代替假想计算的函数，它大约会执行两秒钟")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("接下来，"),s("code",[this._v("main")]),this._v(" 函数中将会包含本例的健身 app 中的重要部分。这代表当用户请求健身计划时 app 会调用的代码。因为与 app 前端的交互与闭包的使用并不相关，所以我们将硬编码代表程序输入的值并打印输出。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("一个来自用户的 intensity 数字，请求健身计划时指定，它代表用户喜好低强度还是高强度健身。")]),this._v(" "),s("li",[this._v("一个随机数，其会在健身计划中生成变化。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("程序的输出将会是建议的锻炼计划。示例 13-2 展示了我们将要使用的 "),s("code",[this._v("main")]),this._v(" 函数：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" simulated_user_specified_value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("10")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" simulated_random_number "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("7")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        simulated_user_specified_value"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        simulated_random_number\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_number"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-2："),s("code",[this._v("main")]),this._v(" 函数包含了用于 "),s("code",[this._v("generate_workout")]),this._v(" 函数的模拟用户输入和模拟随机数输入")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("处于简单考虑这里硬编码了 "),n("code",[t._v("simulated_user_specified_value")]),t._v(" 变量的值为 10 和 "),n("code",[t._v("simulated_random_number")]),t._v(" 变量的值为 7；一个实际的程序会从 app 前端获取强度系数并使用 "),n("code",[t._v("rand")]),t._v(" crate 来生成随机数，正如第二章的猜猜看游戏所做的那样。"),n("code",[t._v("main")]),t._v(" 函数使用模拟的输入值调用 "),n("code",[t._v("generate_workout")]),t._v(" 函数：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在有了执行上下文，让我们编写算法。示例 13-3 中的 "),s("code",[this._v("generate_workout")]),this._v(" 函数包含本例中我们最关心的 app 业务逻辑。本例中余下的代码修改都将在这个函数中进行：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#     thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#     num\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_number"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intensity "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("25")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Today, do {} pushups!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Next, do {} situps!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" random_number "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Take a break today! Remember to stay hydrated!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),n("span",{attrs:{class:"token string"}},[t._v('"Today, run for {} minutes!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-3：程序的业务逻辑，它根据输入并调用 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数来打印出健身计划")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("示例 13-3 中的代码有多处慢计算函数的调用。第一个 "),n("code",[t._v("if")]),t._v(" 块调用了 "),n("code",[t._v("simulated_expensive_calculation")]),t._v(" 两次，外部 "),n("code",[t._v("else")]),t._v(" 中的 "),n("code",[t._v("if")]),t._v(" 完全没有调用它，第二个 "),n("code",[t._v("else")]),t._v(" 中的代码调用了它一次。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("generate_workout")]),this._v(" 函数的期望行为是首先检查用户需要低强度（由小于 25 的系数表示）锻炼还是高强度（25 或以上）锻炼。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("低强度锻炼计划会根据由 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数所模拟的复杂算法建议一定数量的俯卧撑和仰卧起坐。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在这份代码能够应对我们的需求了，但数据科学部门的同学告知我们将来会对调用 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 的方式做出一些改变。为了在要做这些改动的时候简化更新步骤，我们将重构代码来让它只调用 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 一次。同时还希望去掉目前多余的连续两次函数调用，并不希望在计算过程中增加任何其他此函数的调用。也就是说，我们不希望在完全无需其结果的情况调用函数，不过仍然希望只调用函数一次。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"使用函数重构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用函数重构","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用函数重构")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("有多种方法可以重构此程序。我们首先尝试的是将重复的 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数调用提取到一个变量中，如示例 13-4 所示：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#     thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#     num\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_number"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expensive_result "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("simulated_expensive_calculation")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intensity "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("25")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Today, do {} pushups!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expensive_result\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Next, do {} situps!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expensive_result\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" random_number "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Take a break today! Remember to stay hydrated!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),n("span",{attrs:{class:"token string"}},[t._v('"Today, run for {} minutes!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                expensive_result\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-4：将 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 调用提取到一个位置，并将结果储存在变量 "),s("code",[this._v("expensive_result")]),this._v(" 中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这个修改统一了 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 调用并解决了第一个 "),s("code",[this._v("if")]),this._v(" 块中不必要的两次调用函数的问题。不幸的是，现在所有的情况下都需要调用函数并等待结果，包括那个完全不需要这一结果的内部 "),s("code",[this._v("if")]),this._v(" 块。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们希望能够在程序的一个位置指定某些代码，并只在程序的某处实际需要结果的时候 "),s("strong",[this._v("执行")]),this._v(" 这些代码。这正是闭包的用武之地！")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"重构使用闭包储存代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构使用闭包储存代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 重构使用闭包储存代码")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不同于总是在 "),s("code",[this._v("if")]),this._v(" 块之前调用 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数并储存其结果，我们可以定义一个闭包并将其储存在变量中，如示例 13-5 所示。实际上可以选择将整个 "),s("code",[this._v("simulated_expensive_calculation")]),this._v(" 函数体移动到这里引入的闭包中：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expensive_closure "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token closure-params"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("|")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    num\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token function"}},[t._v("expensive_closure")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-5：定义一个闭包并储存到变量 "),s("code",[this._v("expensive_closure")]),this._v(" 中")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("闭包定义是 "),n("code",[t._v("expensive_closure")]),t._v(" 赋值的 "),n("code",[t._v("=")]),t._v(" 之后的部分。闭包的定义以一对竖线（"),n("code",[t._v("|")]),t._v("）开始，在竖线中指定闭包的参数；之所以选择这个语法是因为它与 Smalltalk 和 Ruby 的闭包定义类似。这个闭包有一个参数 "),n("code",[t._v("num")]),t._v("；如果有多于一个参数，可以使用逗号分隔，比如 "),n("code",[t._v("|param1, param2|")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("参数之后是存放闭包体的大括号 —— 如果闭包体只有一行则大括号是可以省略的。大括号之后闭包的结尾，需要用于 "),s("code",[this._v("let")]),this._v(" 语句的分号。闭包体的最后一行（"),s("code",[this._v("num")]),this._v("）返回的值将是调用闭包时返回的值，因为最后一行没有分号；正如函数体中的一样。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("注意这个 "),n("code",[t._v("let")]),t._v(" 语句意味着 "),n("code",[t._v("expensive_closure")]),t._v(" 包含一个匿名函数的 "),n("strong",[t._v("定义")]),t._v("，不是调用匿名函数的 "),n("strong",[t._v("返回值")]),t._v("。回忆一下使用闭包的原因是我们需要在一个位置定义代码，储存代码，并在之后的位置实际调用它；期望调用的代码现在储存在 "),n("code",[t._v("expensive_closure")]),t._v(" 中。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("定义了闭包之后，可以改变 "),s("code",[this._v("if")]),this._v(" 块中的代码来调用闭包以执行代码并获取结果值。调用闭包类似于调用函数；指定存放闭包定义的变量名并后跟包含期望使用的参数的括号，如示例 13-6 所示：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_number"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expensive_closure "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token closure-params"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("|")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intensity "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("25")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Today, do {} pushups!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("expensive_closure")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Next, do {} situps!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("expensive_closure")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" random_number "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Take a break today! Remember to stay hydrated!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),n("span",{attrs:{class:"token string"}},[t._v('"Today, run for {} minutes!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),n("span",{attrs:{class:"token function"}},[t._v("expensive_closure")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-6：调用定义的 "),s("code",[this._v("expensive_closure")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然而，我们又重新引入了示例 13-3 中的问题：仍然在第一个 "),s("code",[this._v("if")]),this._v(" 块中调用了闭包两次，这会调用慢计算两次并使用户多等待一倍的时间。可以通过在 "),s("code",[this._v("if")]),this._v(" 块中创建一个本地变量存放闭包调用的结果来解决这个问题，不过正因为使用了闭包还有另一个解决方案。稍后会回到这个方案上。首先讨论一下为何闭包定义中和所涉及的 trait 中没有类型注解。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"闭包类型推断和注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包类型推断和注解","aria-hidden":"true"}},[this._v("#")]),this._v(" 闭包类型推断和注解")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("闭包不要求像 "),s("code",[this._v("fn")]),this._v(" 函数那样在参数和返回值上注明类型。函数中需要类型注解是因为他们是暴露给用户的显式接口的一部分。严格的定义这些接口对于保证所有人都认同函数使用和返回值的类型来说是很重要的。但是闭包并不用于这样暴露在外的接口：他们储存在变量中并被使用，不用命名他们或暴露给库的用户调用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expensive_closure "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token closure-params"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("|")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    num\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-7：为闭包的参数和返回值增加可选的类型注解")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("fn  add_one_v1   (x: u32) -> u32 { x + 1 }\nlet add_one_v2 = |x: u32| -> u32 { x + 1 };\nlet add_one_v3 = |x|             { x + 1 };\nlet add_one_v4 = |x|               x + 1  ;\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("闭包定义会为每个参数和返回值推断一个具体类型。例如，示例 13-8 中展示了仅仅将参数作为返回值的简短的闭包定义。除了作为示例的目的这个闭包并不是很实用。注意其定义并没有增加任何类型注解：如果尝试调用闭包两次，第一次使用 "),s("code",[this._v("String")]),this._v(" 类型作为参数而第二次使用 "),s("code",[this._v("u32")]),this._v("，则会得到一个错误：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('let example_closure = |x| x;\n\nlet s = example_closure(String::from("hello"));\nlet n = example_closure(5);\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-8：尝试调用一个被推断为两个不同类型的闭包")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("error[E0308]: mismatched types\n --\x3e src/main.rs\n  |\n  | let n = example_closure(5);\n  |                         ^ expected struct `std::string::String`, found\n  integral variable\n  |\n  = note: expected type `std::string::String`\n             found type `{integer}`\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("第一次使用 "),n("code",[t._v("String")]),t._v(" 值调用 "),n("code",[t._v("example_closure")]),t._v(" 时，编译器推断 "),n("code",[t._v("x")]),t._v(" 和此闭包返回值的类型为 "),n("code",[t._v("String")]),t._v("。接着这些类型被锁定进闭包 "),n("code",[t._v("example_closure")]),t._v(" 中，如果尝试对同一闭包使用不同类型则会得到类型错误。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用带有泛型和-fn-trait-的闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用带有泛型和-fn-trait-的闭包","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用带有泛型和 "),s("code",[this._v("Fn")]),this._v(" trait 的闭包")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("幸运的是，还有另一个可用的方案。可以创建一个存放闭包和调用闭包结果的结构体。该结构体只会在需要结果时执行闭包，并会缓存结果值，这样余下的代码就不必再负责保存结果并可以复用该值。你可能见过这种模式被称 "),s("em",[this._v("memoization")]),this._v(" 或 "),s("em",[this._v("lazy evaluation")]),this._v("。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("Fn")]),t._v(" 系列 trait 由标准库提供。所有的闭包都实现了 trait "),n("code",[t._v("Fn")]),t._v("、"),n("code",[t._v("FnMut")]),t._v(" 或 "),n("code",[t._v("FnOnce")]),t._v(" 中的一个。在“闭包会捕获其环境”部分捕获环境部分我们会讨论这些 trait 的区别；在这个例子中可以使用 "),n("code",[t._v("Fn")]),t._v(" trait。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("为了满足 "),n("code",[t._v("Fn")]),t._v(" trait bound 我们增加了代表闭包所必须的参数和返回值类型的类型。在这个例子中，闭包有一个 "),n("code",[t._v("u32")]),t._v(" 的参数并返回一个 "),n("code",[t._v("u32")]),t._v("，这样所指定的 trait bound 就是 "),n("code",[t._v("Fn(u32) -> u32")]),t._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("示例 13-9 展示了存放了闭包和一个 Option 结果值的 "),s("code",[this._v("Cacher")]),this._v(" 结构体的定义：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Option"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("u32"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-9：定义一个 "),s("code",[this._v("Cacher")]),this._v(" 结构体来在 "),s("code",[this._v("calculation")]),this._v(" 中存放闭包并在 "),s("code",[this._v("value")]),this._v(" 中存放 Option 值")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("结构体 "),n("code",[t._v("Cacher")]),t._v(" 有一个泛型  "),n("code",[t._v("T")]),t._v(" 的字段 "),n("code",[t._v("calculation")]),t._v("。"),n("code",[t._v("T")]),t._v(" 的 trait bound 指定了 "),n("code",[t._v("T")]),t._v(" 是一个使用 "),n("code",[t._v("Fn")]),t._v(" 的闭包。任何我们希望储存到 "),n("code",[t._v("Cacher")]),t._v(" 实例的 "),n("code",[t._v("calculation")]),t._v(" 字段的闭包必须有一个 "),n("code",[t._v("u32")]),t._v(" 参数（由 "),n("code",[t._v("Fn")]),t._v(" 之后的括号的内容指定）并必须返回一个 "),n("code",[t._v("u32")]),t._v("（由 "),n("code",[t._v("->")]),t._v(" 之后的内容）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意：函数也都实现了这三个 "),s("code",[this._v("Fn")]),this._v(" trait。如果不需要捕获环境中的值，则在需要实现 "),s("code",[this._v("Fn")]),this._v(" trait 是可以使用函数而不是闭包。")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("value")]),t._v(" 是 "),n("code",[t._v("Option<i32>")]),t._v(" 类型的。在执行闭包之前，"),n("code",[t._v("value")]),t._v(" 将是 "),n("code",[t._v("None")]),t._v("。如果使用 "),n("code",[t._v("Cacher")]),t._v(" 的代码请求闭包的结果，这时会执行闭包并将结果储存在 "),n("code",[t._v("value")]),t._v(" 字段的 "),n("code",[t._v("Some")]),t._v(" 成员中。接着如果代码再次请求闭包的结果，这时不再执行闭包，而是会返回存放在 "),n("code",[t._v("Some")]),t._v(" 成员中的结果。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("刚才讨论的有关 "),s("code",[this._v("value")]),this._v(" 字段逻辑定义于示例 13-10：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#     "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#     value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Option"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("u32"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Cacher "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("Some")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" v"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            None "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" v "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Some")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                v\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-10："),s("code",[this._v("Cacher")]),this._v(" 的缓存逻辑")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Cacher")]),this._v(" 结构体的字段是私有的，因为我们希望 "),s("code",[this._v("Cacher")]),this._v(" 管理这些值而不是任由调用代码潜在的直接改变他们。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("Cacher::new")]),t._v(" 函数获取一个泛型参数 "),n("code",[t._v("T")]),t._v("，它定义于 "),n("code",[t._v("impl")]),t._v(" 块上下文中并与 "),n("code",[t._v("Cacher")]),t._v("  结构体有着相同的 trait bound。"),n("code",[t._v("Cacher::new")]),t._v(" 返回一个在 "),n("code",[t._v("calculation")]),t._v(" 字段中存放了指定闭包和在 "),n("code",[t._v("value")]),t._v(" 字段中存放了 "),n("code",[t._v("None")]),t._v(" 值的 "),n("code",[t._v("Cacher")]),t._v(" 实例，因为我们还未执行闭包。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("当调用代码需要闭包的执行结果时，不同于直接调用闭包，它会调用 "),n("code",[t._v("value")]),t._v(" 方法。这个方法会检查 "),n("code",[t._v("self.value")]),t._v(" 是否已经有了一个 "),n("code",[t._v("Some")]),t._v(" 的结果值；如果有，它返回 "),n("code",[t._v("Some")]),t._v(" 中的值并不会再次执行闭包。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("如果 "),n("code",[t._v("self.value")]),t._v(" 是 "),n("code",[t._v("None")]),t._v("，则会调用 "),n("code",[t._v("self.calculation")]),t._v(" 中储存的闭包，将结果保存到 "),n("code",[t._v("self.value")]),t._v(" 以便将来使用，并同时返回结果值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("示例 13-11 展示了如何在示例 13-6 的 "),s("code",[this._v("generate_workout")]),this._v(" 函数中利用 "),s("code",[this._v("Cacher")]),this._v(" 结构体：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[t._v("# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("time"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#     "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#     value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Option"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("u32"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n# "),n("span",{attrs:{class:"token keyword"}},[t._v("impl")]),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#     "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" Cacher"),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#         Cacher "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#             calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#             value"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#     "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n#     "),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" u32 "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#         "),n("span",{attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#             "),n("span",{attrs:{class:"token function"}},[t._v("Some")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" v"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#             None "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#                 "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" v "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calculation"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#                 "),n("span",{attrs:{class:"token keyword"}},[t._v("self")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("Some")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#                 v\n#             "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#     "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#\n"),n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("generate_workout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" random_number"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u32"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" expensive_result "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Cacher"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("new")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token closure-params"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("|")]),t._v("num"),n("span",{attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"calculating slowly..."')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("from_secs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        num\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" intensity "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("25")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Today, do {} pushups!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expensive_result"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"Next, do {} situps!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expensive_result"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" random_number "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Take a break today! Remember to stay hydrated!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("println!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),n("span",{attrs:{class:"token string"}},[t._v('"Today, run for {} minutes!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                expensive_result"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("value")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intensity"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-11：在 "),s("code",[this._v("generate_workout")]),this._v(" 函数中利用 "),s("code",[this._v("Cacher")]),this._v(" 结构体来抽象出缓存逻辑")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("不同于直接将闭包保存进一个变量，我们保存一个新的 "),n("code",[t._v("Cacher")]),t._v(" 实例来存放闭包。接着，在每一个需要结果的地方，调用 "),n("code",[t._v("Cacher")]),t._v(" 实例的 "),n("code",[t._v("value")]),t._v(" 方法。可以调用 "),n("code",[t._v("value")]),t._v(" 方法任意多次，或者一次也不调用，而慢计算最多只会运行一次。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("尝试使用示例 13-2 中的 "),n("code",[t._v("main")]),t._v(" 函数来运行这段程序，并改变 "),n("code",[t._v("simulated_user_specified_value")]),t._v(" 和 "),n("code",[t._v("simulated_random_number")]),t._v(" 变量中的值来验证在所有情况下在多个 "),n("code",[t._v("if")]),t._v(" 和 "),n("code",[t._v("else")]),t._v(" 块中，闭包打印的 "),n("code",[t._v("calculating slowly...")]),t._v(" 只会在需要时出现并只会出现一次。"),n("code",[t._v("Cacher")]),t._v(" 负责确保不会调用超过所需的慢计算所需的逻辑，这样 "),n("code",[t._v("generate_workout")]),t._v(" 就可以专注业务逻辑了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"cacher-实现的限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cacher-实现的限制","aria-hidden":"true"}},[this._v("#")]),this._v(" "),s("code",[this._v("Cacher")]),this._v(" 实现的限制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("值缓存是一种更加广泛的实用行为，我们可能希望在代码中的其他闭包中也使用他们。然而，目前 "),s("code",[this._v("Cacher")]),this._v(" 的实现存在一些小问题，这使得在不同上下文中复用变得很困难。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("第一个问题是 "),n("code",[t._v("Cacher")]),t._v(" 实例假设对于 "),n("code",[t._v("value")]),t._v(" 方法的任何 "),n("code",[t._v("arg")]),t._v(" 参数值总是会返回相同的值。也就是说，这个 "),n("code",[t._v("Cacher")]),t._v(" 的测试会失败：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,panics extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("#[test]\nfn call_with_different_values() {\n    let mut c = Cacher::new(|a| a);\n\n    let v1 = c.value(1);\n    let v2 = c.value(2);\n\n    assert_eq!(v2, 2);\n}\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这个测试使用返回传递给它的值的闭包创建了一个新的 "),n("code",[t._v("Cacher")]),t._v(" 实例。使用为 1 的 "),n("code",[t._v("arg")]),t._v(" 和为 2 的 "),n("code",[t._v("arg")]),t._v(" 调用 "),n("code",[t._v("Cacher")]),t._v(" 实例的 "),n("code",[t._v("value")]),t._v(" 方法，同时我们期望使用为 2 的 "),n("code",[t._v("arg")]),t._v(" 调用 "),n("code",[t._v("value")]),t._v(" 会返回 2。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用示例 13-9 和示例 13-10 的 "),s("code",[this._v("Cacher")]),this._v(" 实现运行测试，它会在 "),s("code",[this._v("assert_eq!")]),this._v(" 失败并显示如下信息：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("thread 'call_with_different_values' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `2`', src/main.rs\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这里的问题是第一次使用 1 调用 "),n("code",[t._v("c.value")]),t._v("，"),n("code",[t._v("Cacher")]),t._v(" 实例将 "),n("code",[t._v("Some(1)")]),t._v(" 保存进 "),n("code",[t._v("self.value")]),t._v("。在这之后，无论传递什么值调用 "),n("code",[t._v("value")]),t._v("，它总是会返回 1。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("尝试修改 "),n("code",[t._v("Cacher")]),t._v(" 存放一个哈希 map 而不是单独一个值。哈希 map 的 key 将是传递进来的 "),n("code",[t._v("arg")]),t._v(" 值，而 value 则是对应 key 调用闭包的结果值。相比之前检查 "),n("code",[t._v("self.value")]),t._v(" 直接是 "),n("code",[t._v("Some")]),t._v(" 还是 "),n("code",[t._v("None")]),t._v(" 值，现在 "),n("code",[t._v("value")]),t._v(" 会在哈希 map 中寻找 "),n("code",[t._v("arg")]),t._v("，如果存在就返回它。如果不存在，"),n("code",[t._v("Cacher")]),t._v(" 会调用闭包并将结果值保存在哈希 map 对应 "),n("code",[t._v("arg")]),t._v(" 值的位置。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("当前 "),n("code",[t._v("Cacher")]),t._v(" 实现的第二个问题是它的应用被限制为只接受获取一个 "),n("code",[t._v("u32")]),t._v(" 值并返回一个 "),n("code",[t._v("u32")]),t._v(" 值的闭包。比如说，我们可能需要能够缓存一个获取字符串 slice 并返回 "),n("code",[t._v("usize")]),t._v(" 值的闭包的结果。请尝试引入更多泛型参数来增加 "),n("code",[t._v("Cacher")]),t._v(" 功能的灵活性。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"闭包会捕获其环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包会捕获其环境","aria-hidden":"true"}},[this._v("#")]),this._v(" 闭包会捕获其环境")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("示例 13-12 有一个储存在 "),s("code",[this._v("equal_to_x")]),this._v(" 变量中闭包的例子，它使用了闭包环境中的变量 "),s("code",[this._v("x")]),this._v("：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-rust extra-class"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" equal_to_x "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("z"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" z "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" x"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("4")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token function"}},[t._v("assert!")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("equal_to_x")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"caption"},[this._v("示例 13-12：一个引用了其周围作用域中变量的闭包示例")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("这里，即便 "),n("code",[t._v("x")]),t._v(" 并不是 "),n("code",[t._v("equal_to_x")]),t._v(" 的一个参数，"),n("code",[t._v("equal_to_x")]),t._v(" 闭包也被允许使用变量 "),n("code",[t._v("x")]),t._v("，因为它与 "),n("code",[t._v("equal_to_x")]),t._v(" 定义于相同的作用域。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("fn main() {\n    let x = 4;\n\n    fn equal_to_x(z: i32) -> bool { z == x }\n\n    let y = 4;\n\n    assert!(equal_to_x(y));\n}\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("error[E0434]: can't capture dynamic environment in a fn item; use the || { ...\n} closure form instead\n --\x3e src/main.rs\n  |\n4 |     fn equal_to_x(z: i32) -> bool { z == x }\n  |                                          ^\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("闭包可以通过三种方式捕获其环境，他们直接对应函数的三种获取参数的方式：获取所有权，可变借用和不可变借用。这三种捕获值的方式被编码为如下三个 "),s("code",[this._v("Fn")]),this._v(" trait：")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ul",[n("li",[n("code",[t._v("FnOnce")]),t._v(" 消费从周围作用域捕获的变量，闭包周围的作用域被称为其 "),n("strong",[t._v("环境")]),t._v("，"),n("em",[t._v("environment")]),t._v("。为了消费捕获到的变量，闭包必须获取其所有权并在定义闭包时将其移动进闭包。其名称的 "),n("code",[t._v("Once")]),t._v(" 部分代表了闭包不能多次获取相同变量的所有权的事实，所以它只能被调用一次。")]),t._v(" "),n("li",[n("code",[t._v("FnMut")]),t._v(" 获取可变的借用值所以可以改变其环境")]),t._v(" "),n("li",[n("code",[t._v("Fn")]),t._v(" 从其环境获取不可变的借用值")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("当创建一个闭包时，Rust 根据其如何使用环境中变量来推断我们希望如何引用环境。由于所有闭包都可以被调用至少一次，所以所有闭包都实现了 "),n("code",[t._v("FnOnce")]),t._v(" 。那些并没有移动被捕获变量的所有权到闭包内的闭包也实现了 "),n("code",[t._v("FnMut")]),t._v(" ，而不需要对被捕获的变量进行可变访问的闭包则也实现了 "),n("code",[t._v("Fn")]),t._v(" 。 在示例 13-12 中，"),n("code",[t._v("equal_to_x")]),t._v(" 闭包不可变的借用了 "),n("code",[t._v("x")]),t._v("（所以 "),n("code",[t._v("equal_to_x")]),t._v(" 具有 "),n("code",[t._v("Fn")]),t._v(" trait），因为闭包体只需要读取 "),n("code",[t._v("x")]),t._v(" 的值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果你希望强制闭包获取其使用的环境值的所有权，可以在参数列表前使用 "),s("code",[this._v("move")]),this._v(" 关键字。这个技巧在将闭包传递给新线程以便将数据移动到新线程中时最为实用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第十六章讨论并发时会展示更多 "),s("code",[this._v("move")]),this._v(" 闭包的例子，不过现在这里修改了示例 13-12 中的代码（作为演示），在闭包定义中增加 "),s("code",[this._v("move")]),this._v(" 关键字并使用 vector 代替整型，因为整型可以被拷贝而不是移动；注意这些代码还不能编译：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("span",{staticClass:"filename"},[this._v("文件名: src/main.rs")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-rust,ignore,does_not_compile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('fn main() {\n    let x = vec![1, 2, 3];\n\n    let equal_to_x = move |z| z == x;\n\n    println!("can\'t use x here: {:?}", x);\n\n    let y = vec![1, 2, 3];\n\n    assert!(equal_to_x(y));\n}\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('error[E0382]: use of moved value: `x`\n --\x3e src/main.rs:6:40\n  |\n4 |     let equal_to_x = move |z| z == x;\n  |                      -------- value moved (into closure) here\n5 |\n6 |     println!("can\'t use x here: {:?}", x);\n  |                                        ^ value used here after move\n  |\n  = note: move occurs because `x` has type `std::vec::Vec<i32>`, which does not\n  implement the `Copy` trait\n')])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("x")]),t._v(" 被移动进了闭包，因为闭包使用 "),n("code",[t._v("move")]),t._v(" 关键字定义。接着闭包获取了 "),n("code",[t._v("x")]),t._v(" 的所有权，同时 "),n("code",[t._v("main")]),t._v(" 就不再允许在 "),n("code",[t._v("println!")]),t._v(" 语句中使用 "),n("code",[t._v("x")]),t._v(" 了。去掉 "),n("code",[t._v("println!")]),t._v(" 即可修复问题。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[t._v("大部分需要指定一个 "),n("code",[t._v("Fn")]),t._v(" trait bound 的时候，可以从 "),n("code",[t._v("Fn")]),t._v(" 开始，而编译器会根据闭包体中的情况告诉你是否需要 "),n("code",[t._v("FnMut")]),t._v(" 或 "),n("code",[t._v("FnOnce")]),t._v("。")])}],!1,null,null,null);e.options.__file="ch13-01-closures.md";s.default=e.exports}}]);